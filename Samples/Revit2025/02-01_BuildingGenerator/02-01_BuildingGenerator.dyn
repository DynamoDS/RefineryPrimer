{
  "Uuid": "557bec57-77e3-4815-b000-d66d1f77ccc1",
  "IsCustomNode": false,
  "Description": "This Graph used with Generative Design for Revit on \"Randomize\" mode, will automatically generate a series of random towers, sitting across a stipulated site boundary. The Tower will randomise in height, floor plates and orientation that allow for a vast amount of potential design solutions.",
  "Name": "02-01_BuildingGenerator",
  "ElementResolver": {
    "ResolutionMap": {
      "DSCore.Color": {
        "Key": "DSCore.Color",
        "Value": "DSCoreNodes.dll"
      },
      "Math": {
        "Key": "DSCore.Math",
        "Value": "DSCoreNodes.dll"
      }
    }
  },
  "Inputs": [
    {
      "Id": "0255ecbf95bc4c77b9cb265a6ec274e5",
      "Name": "IN_Site Offset",
      "Type": "number",
      "Type2": "number",
      "Value": "3280",
      "MaximumValue": 4500.0,
      "MinimumValue": 500.0,
      "StepValue": 10.0,
      "NumberType": "Integer",
      "Description": "Produces integer values"
    },
    {
      "Id": "2b18989505564bd58244de17c878f678",
      "Name": "IN_Building Height",
      "Type": "number",
      "Type2": "number",
      "Value": "85000",
      "MaximumValue": 200000.0,
      "MinimumValue": 4000.0,
      "StepValue": 1000.0,
      "NumberType": "Integer",
      "Description": "Produces integer values"
    },
    {
      "Id": "79f401d622324ded938229060f712b23",
      "Name": "Point 1.U",
      "Type": "number",
      "Type2": "number",
      "Value": "0.53",
      "MaximumValue": 1.0,
      "MinimumValue": 0.0,
      "StepValue": 0.01,
      "NumberType": "Double",
      "Description": "Produces numeric values"
    },
    {
      "Id": "5931a0906cc24206a38f793d72c90145",
      "Name": "Point 1.V",
      "Type": "number",
      "Type2": "number",
      "Value": "0.72",
      "MaximumValue": 1.0,
      "MinimumValue": 0.0,
      "StepValue": 0.01,
      "NumberType": "Double",
      "Description": "Produces numeric values"
    },
    {
      "Id": "4000fd783f0149f7ae8852e3d9e4dacf",
      "Name": "Point 2.V",
      "Type": "number",
      "Type2": "number",
      "Value": "0.52",
      "MaximumValue": 1.0,
      "MinimumValue": 0.0,
      "StepValue": 0.01,
      "NumberType": "Double",
      "Description": "Produces numeric values"
    },
    {
      "Id": "8874529a6cf547eab944589363b8d0bb",
      "Name": "Point 2.U",
      "Type": "number",
      "Type2": "number",
      "Value": "0.61",
      "MaximumValue": 1.0,
      "MinimumValue": 0.0,
      "StepValue": 0.01,
      "NumberType": "Double",
      "Description": "Produces numeric values"
    },
    {
      "Id": "185c4b4093984f82a30f3108b39e2b86",
      "Name": "Point 3.V",
      "Type": "number",
      "Type2": "number",
      "Value": "0.26",
      "MaximumValue": 1.0,
      "MinimumValue": 0.0,
      "StepValue": 0.01,
      "NumberType": "Double",
      "Description": "Produces numeric values"
    },
    {
      "Id": "ce04ea28426a4da3bf4260e3d9bf0f2e",
      "Name": "Point 3.U",
      "Type": "number",
      "Type2": "number",
      "Value": "0.87",
      "MaximumValue": 1.0,
      "MinimumValue": 0.0,
      "StepValue": 0.01,
      "NumberType": "Double",
      "Description": "Produces numeric values"
    },
    {
      "Id": "df07e5f3e4164ee393a5d96ee0b2d6dd",
      "Name": "Point 4.V",
      "Type": "number",
      "Type2": "number",
      "Value": "0.56",
      "MaximumValue": 1.0,
      "MinimumValue": 0.0,
      "StepValue": 0.01,
      "NumberType": "Double",
      "Description": "Produces numeric values"
    },
    {
      "Id": "2f20e99c197347129c6ff0ddf3f6884a",
      "Name": "Point 4.U",
      "Type": "number",
      "Type2": "number",
      "Value": "0.44",
      "MaximumValue": 1.0,
      "MinimumValue": 0.0,
      "StepValue": 0.01,
      "NumberType": "Double",
      "Description": "Produces numeric values"
    },
    {
      "Id": "caefb9322b8c41109223baad2dbe652f",
      "Name": "Point 5.V",
      "Type": "number",
      "Type2": "number",
      "Value": "0.31",
      "MaximumValue": 1.0,
      "MinimumValue": 0.0,
      "StepValue": 0.01,
      "NumberType": "Double",
      "Description": "Produces numeric values"
    },
    {
      "Id": "62d8d0455da244f8a26125c6eed5e62e",
      "Name": "Point 5.U",
      "Type": "number",
      "Type2": "number",
      "Value": "0.34",
      "MaximumValue": 1.0,
      "MinimumValue": 0.0,
      "StepValue": 0.01,
      "NumberType": "Double",
      "Description": "Produces numeric values"
    },
    {
      "Id": "fbb01117314a473db6b3defb3781c6af",
      "Name": "Point 6.U",
      "Type": "number",
      "Type2": "number",
      "Value": "0.59",
      "MaximumValue": 1.0,
      "MinimumValue": 0.0,
      "StepValue": 0.01,
      "NumberType": "Double",
      "Description": "Produces numeric values"
    },
    {
      "Id": "c132210d89b24108b27a9f10404fcba8",
      "Name": "Point 6.V",
      "Type": "number",
      "Type2": "number",
      "Value": "0.71",
      "MaximumValue": 1.0,
      "MinimumValue": 0.0,
      "StepValue": 0.01,
      "NumberType": "Double",
      "Description": "Produces numeric values"
    },
    {
      "Id": "edb603efdc2c4f5a8c0291e1c9e1f231",
      "Name": "Point 7.U",
      "Type": "number",
      "Type2": "number",
      "Value": "0.17",
      "MaximumValue": 1.0,
      "MinimumValue": 0.0,
      "StepValue": 0.01,
      "NumberType": "Double",
      "Description": "Produces numeric values"
    },
    {
      "Id": "7c9a2197fdc341c89f1c132ad39bf01b",
      "Name": "Point 7.V",
      "Type": "number",
      "Type2": "number",
      "Value": "0.81",
      "MaximumValue": 1.0,
      "MinimumValue": 0.0,
      "StepValue": 0.01,
      "NumberType": "Double",
      "Description": "Produces numeric values"
    },
    {
      "Id": "5f18f43fb472465182ae0df3859d5389",
      "Name": "Site Boundary Lines",
      "Type": "selection",
      "Type2": "hostSelection",
      "Value": "d4203209-ccb7-4332-ba94-0c139e5292eb-000ab871,d4203209-ccb7-4332-ba94-0c139e5292eb-000ab873,d4203209-ccb7-4332-ba94-0c139e5292eb-000ab879,d4203209-ccb7-4332-ba94-0c139e5292eb-000ab87d,d4203209-ccb7-4332-ba94-0c139e5292eb-000ab87f,d4203209-ccb7-4332-ba94-0c139e5292eb-000ab887,d4203209-ccb7-4332-ba94-0c139e5292eb-000ab889",
      "Description": "Pick multiple elements from the Revit document."
    }
  ],
  "Outputs": [
    {
      "Id": "8a62cf03c3254d9197d29e2c972d10a1",
      "Name": "OUT_Total Building Area",
      "Type": "float",
      "InitialValue": "57228",
      "Description": "Visualizes a node's output"
    },
    {
      "Id": "05a07d68a540445b9648669bf233f1f6",
      "Name": "OUT_Lift Provision Area ",
      "Type": "float",
      "InitialValue": "502.4897560975609",
      "Description": "Visualizes a node's output"
    },
    {
      "Id": "58911b2906f645d9a6b09c3933fa83c5",
      "Name": "OUT_Public Realm Area",
      "Type": "float",
      "InitialValue": "49",
      "Description": "Visualizes a node's output"
    }
  ],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "32af6cba5eaf4fd9b7a39752cf4b1202",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "f01b9ea10a904fd3853e19fb58b40e24",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dcbb669bfd674b29af5aef8fd4c2390a",
          "Name": "direction",
          "Description": "Displacement direction.\n\nVector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ff1f09560a53469197520608cc4e3703",
          "Name": "distance",
          "Description": "Displacement distance along given direction.\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "070eaae2b65f49db9ae8918ae13bfda7",
          "Name": "Geometry",
          "Description": "Transformed Geometry.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Translate@Autodesk.DesignScript.Geometry.Vector,double",
      "Replication": "Auto",
      "Description": "Translates any geometry type by the given distance in the given direction.\n\nGeometry.Translate (direction: Vector, distance: double): Geometry"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "e41ab09e3ecb4b9c911435779b2e7d49",
      "NodeType": "FunctionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9e0c0418e3ef4b0391f1e88d0c837a57",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.ZAxis",
      "Replication": "Auto",
      "Description": "Get the canonical Z axis Vector (0,0,1)\n\nVector.ZAxis ( ): Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "19dc5699b7b743deaf9324427405efb5",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "40781cfdc7eb47ad9da0a8982354593a",
          "Name": "list",
          "Description": "The list the element will be inserted to\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "997d552652394cef923560b1a384aea3",
          "Name": "element",
          "Description": "The element to be inserted\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "2096a6c4c02c4272b09dec6979399ab6",
          "Name": "index",
          "Description": "Specifies the location in the list of the element to be inserted\n\nint",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0adbcffc9bef4aae8781847fab245633",
          "Name": "list",
          "Description": "List with the element inserted",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Insert@var[]..[],var[]..[],int",
      "Replication": "Auto",
      "Description": "Inserts an element into a list at specified index.\n\nList.Insert (list: var[]..[], element: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "6d129bc876f440ca81c40a6c23155c6b",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "9e4fb430c5a24ffb99bbca19cef94ade",
          "Name": "list",
          "Description": "List to get the last item of\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "68e71a20b971442c889ff358a27f9fc8",
          "Name": "item",
          "Description": "Last item in the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.LastItem@var[]..[]",
      "Replication": "Auto",
      "Description": "Retrieves the last item in a list.\n\nList.LastItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "139e9f9452474392b25df55f50511224",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "d92baf8ed47c4ec99ead3e5956896701",
          "Name": "crossSections",
          "Description": "Curve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f7d8930cbe344b2cb33d7f1fea8b07d0",
          "Name": "Solid",
          "Description": "Solid",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Solid.ByLoft@Autodesk.DesignScript.Geometry.Curve[]",
      "Replication": "Auto",
      "Description": "Create a Solid by lofting between input cross section closed Curves.\n\nSolid.ByLoft (crossSections: Curve[]): Solid"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "89c7122e04cb4a6daa2f84b92122ef86",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "78acf4067cfe4ca291ec7df8e4df6be7",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0e6f46b570bd4b03829e669cc23ca05f",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "969bbc0c91a6422592691641590d8bbd",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "6fb413dfbc0e447da98326f75a1f2e14",
          "Name": "geometry",
          "Description": "The geometry to which you would like to apply color.\n\nGeometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "204a4f1a919945399fdf4f30a92c24f1",
          "Name": "color",
          "Description": "The color.\n\nColor",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2530eb6afc834a5d855bd37b6cad89bb",
          "Name": "GeometryColor",
          "Description": "A Display object.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Modifiers.GeometryColor.ByGeometryColor@Autodesk.DesignScript.Geometry.Geometry,DSCore.Color",
      "Replication": "Auto",
      "Description": "Display geometry using a color.\n\nGeometryColor.ByGeometryColor (geometry: Geometry, color: Color): GeometryColor"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "a0422580bbc34fa1943658f03d4c9045",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "adb3a857b0804f8da3b6906858759591",
          "Name": "",
          "Description": "white",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fa850926f1a34f138f00b22bf4f88afe",
          "Name": "",
          "Description": "glass",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "white = DSCore.Color.ByARGB(255,255,255,255);\nglass = DSCore.Color.ByARGB(150,60,145,190);"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "8eb018b47b904f28bf417e9043d6c5dd",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "83bd133e789b4ae3b1696e871b1fd890",
          "Name": "closedCurve",
          "Description": "Closed curve used as surface boundary\n\nCurve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e15aa8529f36412f94536140b10a327b",
          "Name": "Surface",
          "Description": "Surface created by patch",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.ByPatch@Autodesk.DesignScript.Geometry.Curve",
      "Replication": "Auto",
      "Description": "Create a Surface by filling in the interior of a closed boundary defined by input Curves.\n\nSurface.ByPatch (closedCurve: Curve): Surface"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Copyright 2018 Dimitar Venkov\n\"\"\"\nExternalised PolyCurve Generator\n\"\"\"\n__author__ = 'Dimitar Venkov - @dimven'\n__copyright__ = 'MIT Creative Commons'\n__version__ = '1.0.0'\n\nimport clr\nclr.AddReference('ProtoGeometry')\nfrom Autodesk.DesignScript.Geometry import *\n\nfrom itertools import chain\n\nsite = IN[0]\npts = sorted( (p.X, p.Y) for p in IN[1])\nelev = 0\n\ndef pCrs(o, a, b):\n        return (a[0] - o[0]) * (b[1] - o[1]) - (a[1] - o[1]) * (b[0] - o[0])\n\npLen = len(pts)\nif pLen < 4:\n        polyCurve = PolyCurve.ByPoints(pts,True)\n        surf = Surface.ByPatch(polyCurve)\n        int = Geometry.Intersect(site,surf)\n        OUT = int[0]\nelse:\n        lower, upper = [], []\n        \n        for i in range(pLen):\n                j = pLen - 1 - i\n                while len(lower) >= 2 and pCrs(lower[-2], lower[-1], pts[i]) <= 0:\n                        lower.pop()\n                lower.append(pts[i])\n                while len(upper) >= 2 and pCrs(upper[-2], upper[-1], pts[j]) <= 0:\n                        upper.pop()\n                upper.append(pts[j])\n        \n        lower.pop()\n        upper.pop()\n        \n        newPts = [Point.ByCoordinates(p[0], p[1], elev) for p in chain(lower, upper) ]\n        polyCurve = PolyCurve.ByPoints(newPts,True)\n        surf = Surface.ByPatch(polyCurve)\n        int = Geometry.Intersect(site,surf)\n        OUT = int[0]",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "a6941d472c834a58a008ce5a9fda4c82",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "6bd7833cb7a54c4d9ff78840082b917c",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f43c0fa6fd1f4fbda9cc7634b4d0eaf3",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2fccee0bf4c2474fb6e772b4ccc9e5b0",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "41a0f54d37fc440187aade0b8be46a1e",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "801fc140c38741bba04ea09b2fd6b414",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1543608cb85140729b9016cdcee34538",
          "Name": "Curve[]",
          "Description": "Curve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.PerimeterCurves",
      "Replication": "Auto",
      "Description": "Return all the boundary Curves of the Surface.\n\nSurface.PerimeterCurves ( ): Curve[]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Copyright 2019 designtech.io. All rights reserved.\n\"\"\"\nSite Layout Generator\n\"\"\"\n__copyright__ = 'designtech.io 2019'\n__version__ = '1.0.0'\n\nimport clr  \nclr.AddReference('ProtoGeometry')  \nfrom Autodesk.DesignScript.Geometry import * \nclr.AddReference('DSCoreNodes') \nimport DSCore \nfrom DSCore import List  \nimport sys \nsys.path.append(r'C:\\Program Files (x86)\\IronPython 2.7\\Lib')\nimport random \nimport time \nimport math\nimport itertools\nfrom itertools import islice,chain\n\n# custom list splittling definition\ndef splitByLengths( seq, num ): \n        newList = []\n        if sum(num) >= len(seq):\n                min = 0\n                for n in num:\n                        newN = min + n\n                        newList.append(seq[min:newN])\n                        min += n\n        else:\n                num.append(len(seq)-sum(num))\n                min = 0\n                for n in num:\n                        newN = min + n\n                        newList.append(seq[min:newN])\n                        min += n\n        return newList\n\n# Custom surface splitting definition\ndef splitSrf( surface, cutCrv, offsetDist ):  #Inputs of 'surface' (Singular), cutCurve that will slice the\n    #surfaces and an offset distance\n    rebuildCrv = Line.ByStartPointEndPoint( cutCrv.StartPoint, cutCrv.EndPoint )  #Rebuilding the curve as the\n    #origin curve sometimes fails (No idea why)\n    focusPoint = surface.PointAtParameter( 0.5, 0.5 )  #Creating a centroidal point to offset towards with our\n    #splitting line\n    offsetCrv = sorted( [ rebuildCrv.Offset( offsetDist ), rebuildCrv.Offset( -offsetDist ) ], \n    key = lambda x : Geometry.DistanceTo( x, focusPoint ) )[0]  #Creating an offset curve for both the positive\n    #and negative directions, based off our rebuilt curve, then sorting that list based on the Distance To the\n    #focus point (surface point) and from the curve geometry and taking the first value (Closest to our chosen\n    #point)\n    crvLen = offsetCrv.Length  #Calling the Length value of our chosen offset curve (Internal to surface)\n    extendCrv = offsetCrv.ExtendStart( crvLen * 20 ).ExtendEnd( crvLen * 20  )  #Extending the start and end of \n    #our chosen curve by 3 x the length so that no matter the site constraints, we'll push out beyond it. \n    # NOTE: This may not be a viable approach but didn't fail in all prototype options\n    extrudeCrv = extendCrv.Extrude( Vector.ByCoordinates( 0, 0, 1), 500).Translate( 0, 0, -250 )  #We then extrude\n    #our extended curve in the Z-direction up 500 units, then translate that back down by half it's value (-250) as\n    #simply cutting the surface with a 'child' object of that surface (i.e our offset periemter curve) seems to \n    #fail often. So we have to generate a new, non-relational object\n    splitSrf = sorted( Geometry.Split( surface, extrudeCrv ), key = lambda x : x.Area )[-1]  #Splitting our surface\n    #using Geometry.Split, and then sorting that list by the Area of the surfaces.\n    # NOTE: This may not be a viable approach and would be better served using another approach\n    [ i.Dispose() for i in [ rebuildCrv, focusPoint, offsetCrv, extendCrv, extrudeCrv ] ]  #Disposing of the \n    #geometry will clear up RAM but is ___SUPER DANGEROUS___ when not used corretly as you can dispose of things not\n    #internal to the Python node but to the Dynamo graph itself. \n    return splitSrf  #Return the chosen split surface\n\n# Creating a bespoke rounding definition\ndef roundToPrecision( crv, num, precision ):  #Creating a defintion that uses a 'curve', 'number' and 'precison' value\n    return math.floor( ( crv.Length / num ) / precision ) * precision  #Returning a precision value on a custom divided\n    #line. i.e we want to divide our curve by 3 and then precision it to 100\n    #crv.Length = 23078.987, num = 3, precision = 100\n    # (23078.987 / 3) => 7692.995 / 100 => 76.929 * 100 => math.floor(7692.995 ) => 7692\n\n# Creating a Remap-Range Definition\ndef remap( x, nMin, nMax ):  #Just find a C# version or build one to remap the range :) \n    #range check\n    if 0 == 1:\n        print(\"Warning: Zero input range\")\n        return None\n\n    if nMin == nMax:\n        print(\"Warning: Zero output range\")\n        return None\n\n    #check reversed input range\n    reverseInput = False\n    oldMin = min( 0, 1 )\n    oldMax = max( 0, 1 )\n    if not oldMin == 0:\n        reverseInput = True\n\n    #check reversed output range\n    reverseOutput = False   \n    newMin = min( nMin, nMax )\n    newMax = max( nMin, nMax )\n    if not newMin == nMin :\n        reverseOutput = True\n\n    portion = ( x - oldMin ) * ( newMax - newMin ) / ( oldMax - oldMin )\n    if reverseInput:\n        portion = ( oldMax - x ) * ( newMax - newMin ) / ( oldMax - oldMin )\n\n    result = portion + newMin\n    if reverseOutput:\n        result = newMax - portion\n\n    return result\n\n# Splitting up our floors\ndef splitNums( num, floorRange ):  #Creating a custom definition to split up our floor numbers\n    startList = [ random.randint( 0, max( floorRange )) ]  #Creating a list comprehension of\n    #a random integer between zero and the maximum number of our 'floorRange' variabble\n    for n in range( num - 1 ):  #Creating a For Loop across a range from zero to our number minus 1\n        #i.e n = [0, 1, 2] as an xrange object (Generator)\n        _int = random.randint(0, ( max( floorRange ) - sum( startList )) )  #Creating an integer\n        #randomly between zero and our maximum 'floorRange' \n        startList.append(_int)  #Append this random integer to our start list\n    return startList \n    \ndef _flatten(l, result = None):  #Creating a custom flatten function, with a default None (null) result\n    if result is None:  #If the result is None (null) then... \n        result = []  #return an empty list\n    for i in l:  #Otherwise, for index inside of our list-to-flatten\n        if isinstance(i, list):  #If the index item is an instance of the 'list' object\n            _flatten(i, result)  #Then recursively call our custom function on that list, and populate the \n            #'result' variable with it \n        else:  #Otherwise\n            result.append(i)  #Simply append the index to the result\n    return result  #And return the result\n\n# Input Ports\nsurface = IN[0]\nmaxBuildingHeight = IN[1]\nfloorHeight = IN[2]\nsiteBoundary = IN[3]\n\n# Demarcating a precision value\nprecision = 100\n\n# Surface randomisation\nsrfCount = round( remap( random.random(), 2, 5 ) )  #Remapping a random value between 0.0 and 1.0 to between \n# 2 and 5 and then rounding it. This gives us an overall surface count for our Tower\n\nnumOfFloors = math.floor( round( maxBuildingHeight / floorHeight ) )  #Random number of floors\n\ntowerFloorRange = list(range( 0, numOfFloors))  #Creating a tower floor range between\n\n#Floor splits randomised\nfloorSplitNums = splitNums( srfCount, towerFloorRange )  #Calling our custom 'splitNums' definition\n\n#While loop to discount any variation that contains a zero \n#NOTE: This is the intention, but may not have worked correctly. We also want to while loop min/max floor area\n#fencing\nwhile 0 in floorSplitNums:\n    newList = splitNums( srfCount, towerFloorRange )  #Calling our 'splitNums' definition inside the\n    #while loop if said condition exists\n    floorSplitNums = newList  #Reapplying to the same variable 'newList' data\n    \n# Floor Offset values\n#podiumOffsets = [ i * floorHeight for i in xrange( 0, topPodiumFloor ) ]  #Using a 'List Comprehension' for generating\n#a new value list based off index values times the floor height inside of a range starting at zero and finishing at\n#the 'topPodiumFloor'\nfloorOffsets = [ ( i * floorHeight ) for i in range( 1, max(towerFloorRange) + 1 ) ]  #Using a \n#'List Comprehension' for generating floor offsets of the index value times the floor height plus the maximum value of\n#the podium offsets (This generates the tower levels)\n\nsplitUpperFloors = splitByLengths( floorOffsets, floorSplitNums )  #We then use our custom definition called\n#'splitByLengths' and split up our values into sublists by the 'floorSplitNums'\nsplitUpperFloors[0].insert(0,0)\n\n\nfloorZLength = len( splitUpperFloors )  #Getting the length of our floorZOffsets list\n\n# Overall Building Height\nbuildingHeight = max( floorOffsets ) + floorHeight  #Getting the maximum floorZoffsets, taking the last item in\n#the list and adding the floor Height for the total building height\n\n# Origin Surface and catchment list\nsrfList = [ surface ]  #We populate this as a list (Wrapped in square brackets) for later use\n\n\n\nmodeCounter = 0  #A counter for surface replication\nwhile modeCounter < srfCount:  #While the counter is lower than the 'srfCount' then run the following\n        crvs = srfList[ modeCounter ].PerimeterCurves()  #Get the modeCounter index of the 'srfList' and pull out perimeter curves\n     \n        mode = List.Shuffle( crvs )[0]  #Fully randomise the curves list and pull out the first Curve\n               \n        if modeCounter == 0:  #ModeCounter will showcase the distance upon what the towers will offset by (The offsets\n        #get smaller the higher you go up the tower)\n        # NOTE: This may want to be changed as it get's pretty subtle\n                offsetDist = roundToPrecision(mode, 3, precision)  #Divide chosen seed curve by 3, round to precision\n        if modeCounter == 1:\n            offsetDist = roundToPrecision(mode, 4, precision)  #Divide chosen seed curve by 4, round to precision\n        if modeCounter == 2:\n            offsetDist = roundToPrecision(mode, 5, precision)  #Divide chosen seed curve by 5, round to precision\n        else:\n            offsetDist = roundToPrecision(mode, 8, precision)  #Divide chosen seed curve by 8, round to precision\n            \n        srfSplit = splitSrf( srfList[modeCounter], mode, offsetDist )  #Split our surfaces based off the Mode Counter\n        #and return the surface closer to the centroid always\n        srfList.append( srfSplit )  #Append this split surface to our 'srfList' for re-run of the loop\n        \n        [ i.Dispose() for i in crvs ]  #Dispose of the curve geometry\n        modeCounter += 1  #Add 1 to the modeCounter\n        \nsrfs = srfList  #Output a new list called 'srfs' that contains all of our Surfaces for the tower\n\nsAreas = [ ( s.Area / 1000000 ) for s in srfs ]  #Calculate the areas for each surface using 'List Comprehension'\n\nOUT = srfs, splitUpperFloors, numOfFloors",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "d1df8d4cdd404822a7691ae92d3d585f",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "6f4cab62150a435da73415c2d11d2ecc",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "79257e5dff0e48f1850e85db254f0986",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "48188bcbe58c4cafae5a2e6521cbd480",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bef999d3f9734d4daf0c7adf54812131",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e35ffea223914693aa0245da9f0fb696",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "984e6515fb8e407084a99a1d8bf947f6",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "2b227ef4580a45fb9f818600f241275d",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5e3a80322ec44d27aed25437d48c3748",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "16c999a62a3948a9b57222aa889c4ee3",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "37b637dd33bd40bdba2daae6b698993d",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "x[2];\nx[0];\nx[1];"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "72c8d2bf8d4549d7ad79514f21d7d30a",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "2913704203ff4318bbd43575e82d1621",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5a1de29725214185b0a4cc8d97736797",
          "Name": "xTranslation",
          "Description": "Displacement along X-axis.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "41b269b73c394b1b8d4ca7efa7b85cb8",
          "Name": "yTranslation",
          "Description": "Displacement along Y-axis.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0f566391b4eb4194b4cfaca0e649803f",
          "Name": "zTranslation",
          "Description": "Displacement along Z-axis.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4c8f15f5401942e59e1b22530c119817",
          "Name": "Geometry",
          "Description": "Transformed Geometry.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Translate@double,double,double",
      "Replication": "Auto",
      "Description": "Translates any given geometry by the given displacements in the x, y, and z directions defined in WCS respectively.\n\nGeometry.Translate (xTranslation: double = 0, yTranslation: double = 0, zTranslation: double = 0): Geometry"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "8a66850cce8b4e2889a4bf05778c15aa",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "fb6a271c1b544245becda79a330cca16",
          "Name": "values",
          "Description": "Numbers to add to sum\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "57e0bc7ccf8841f3be9c9e496f66389d",
          "Name": "double",
          "Description": "The sum of the values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Find the sum of a series of numbers\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "117e1b984d7d48a7ad508884794fffff",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "b5d0b5a993664007935f70d6fbc61a3d",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "359f25848f1e4de5bc43daff24f44d3e",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "18d4b2ffe6c04727a5865afc54836e64",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "dcfa2031846b4409bfed8423b35d3f39",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "846c03bd97284e229010b2dce74f3f85",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d0e1b76daa0d42d7affa0fd5914d5d6c",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.Area",
      "Replication": "Auto",
      "Description": "Returns the total surface area.\n\nSurface.Area: double"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "WatchWidth": 58.0,
      "WatchHeight": 38.0,
      "Id": "8a62cf03c3254d9197d29e2c972d10a1",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "7c6663eab5cb49ac8acad6a54ff9ee2c",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cdcc6cab42f2403aa589348c156c0120",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualizes a node's output"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "36bf416ede024fd8a996a51b2d13242c",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "f3721f9d76134205a52358660739d8f2",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "06fdd64fefb847bba20542938116e47e",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "Math.Round(x/1000000);"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "__author__ = 'Antonio Rodriguez'\n__version__ = '1.0.0'\n\nimport clr\nclr.AddReference('ProtoGeometry')\nfrom Autodesk.DesignScript.Geometry import *\nimport math\n\nnFloors = IN[0]\nbuildingTotalArea = IN[1]\n\nliftProvision = (buildingTotalArea*(-0.18))/(nFloors-47.5)\n\nOUT = abs(liftProvision)",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "cc162b78079f47caba573472ec92b67d",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "edef56b7da6c4e0f838536d62235778f",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bae7bf23ccc849f99b6c07a4bb399892",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "714506dc8fe443f2b2224968ff079781",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "WatchWidth": 148.0,
      "WatchHeight": 38.0,
      "Id": "05a07d68a540445b9648669bf233f1f6",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "1307493d0d834bdaa0dd29580e51426e",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8d8bf468fac24288bf738891aa5fe12c",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualizes a node's output"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "b037365316aa4e128df0433f5a617826",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "68d668d188454801853fe8fa12c490aa",
          "Name": "geometry",
          "Description": "The geometry to which you would like to apply color.\n\nGeometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9259a0424ca643d1b8819bf8a6e9f4d6",
          "Name": "color",
          "Description": "The color.\n\nColor",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4814676fcac147529879fb5b51ff7c7e",
          "Name": "GeometryColor",
          "Description": "A Display object.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Modifiers.GeometryColor.ByGeometryColor@Autodesk.DesignScript.Geometry.Geometry,DSCore.Color",
      "Replication": "Auto",
      "Description": "Display geometry using a color.\n\nGeometryColor.ByGeometryColor (geometry: Geometry, color: Color): GeometryColor"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "b4677a52173f462d83eb776ac4fe9c7a",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "83cabaaf567a40f78712ce481bb79b9d",
          "Name": "list",
          "Description": "List to chop into sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "95210a185a2f4445917a3b46dfa46391",
          "Name": "lengths",
          "Description": "Lengths of consecutive sublists to be created from the input list\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "79c9fa384bec406fb1e4ee49ee3997cd",
          "Name": "lists",
          "Description": "Sublists created from the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Replication": "Auto",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "6138fd4be1b6475ab0ac7578cdaeea5d",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "511707d823844bff936fd4ac825742b8",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "2;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "ccfcf61d20cc404ea74012308d2c2f7e",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "d9c61740a3fe49d98292237c94aab617",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d68efe86695f4b7aa75fe16f3d2f52ad",
          "Name": "u",
          "Description": "double\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "316535e920b846fe947dcc2b0d6f9b89",
          "Name": "v",
          "Description": "double\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b123066eab8a465e8d50b1f0568c55c8",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.PointAtParameter@double,double",
      "Replication": "Auto",
      "Description": "Return the Point at specified U and V parameters.\n\nSurface.PointAtParameter (u: double = 0, v: double = 0): Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "828e4680e9274a578c222b9ca6231682",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "9861629e974e488888d12c9093e594cf",
          "Name": "lists",
          "Description": "List of lists to be transposed\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3ba4ec5c3cf44b86986ba6d91a720baf",
          "Name": "lists",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "f748a7770417451980e486114ca630ff",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "198e057aeb89424882e95bf49424cdc2",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "11be079cfd164e9eb484acf661859e41",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2eea52917716417d9c4933c094bb9e15",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "x[0];\nx[1];"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "d97d616528d74362b8a056251fe11db4",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f1a4fa066334428ea906fdd39ba95cb5",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "[-0.2,1.2];"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "df85817211f64e10bfa546e68ee31e57",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "dd2f2a732d8144ee81f63616c630053e",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3cefc78cc3e64040bc3a618ddf604394",
          "Name": "u",
          "Description": "double\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "249bdcb385ee4226b3346e71c6b545ff",
          "Name": "v",
          "Description": "double\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "38904ff5d178449bb74ccd91b8fdca0b",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.PointAtParameter@double,double",
      "Replication": "CrossProduct",
      "Description": "Return the Point at specified U and V parameters.\n\nSurface.PointAtParameter (u: double = 0, v: double = 0): Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "58421958e1dd4247928224759ec9180e",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "79f0d69fbb7f41e1a81bb0c0ea47b932",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dae00c4d87b24a1fbd447a22d63f24cd",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8acd139caade4c9dbcf2f01de59fdac9",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Copyright 2018 Dimitar Venkov\n\"\"\"\nExternalised PolyCurve Generator\n\"\"\"\n__author__ = 'Dimitar Venkov - @dimven'\n__copyright__ = 'MIT Creative Commons'\n__version__ = '1.0.0'\n\nimport clr\nclr.AddReference('ProtoGeometry')\nfrom Autodesk.DesignScript.Geometry import *\n\nfrom itertools import chain\n\npts = sorted( (p.X, p.Y) for p in IN[0])\nelev = 0\n\ndef pCrs(o, a, b):\n        return (a[0] - o[0]) * (b[1] - o[1]) - (a[1] - o[1]) * (b[0] - o[0])\n\npLen = len(pts)\nif pLen < 4:\n        polyCurve = PolyCurve.ByPoints(pts,True)\n        surf = Surface.ByPatch(polyCurve)\n        int = Geometry.Intersect(site,surf)\n        OUT = int[0]\nelse:\n        lower, upper = [], []\n        \n        for i in range(pLen):\n                j = pLen - 1 - i\n                while len(lower) >= 2 and pCrs(lower[-2], lower[-1], pts[i]) <= 0:\n                        lower.pop()\n                lower.append(pts[i])\n                while len(upper) >= 2 and pCrs(upper[-2], upper[-1], pts[j]) <= 0:\n                        upper.pop()\n                upper.append(pts[j])\n        \n        lower.pop()\n        upper.pop()\n        \n        newPts = [Point.ByCoordinates(p[0], p[1], elev) for p in chain(lower, upper) ]\n        polyCurve = PolyCurve.ByPoints(newPts,True)\n        surf = Surface.ByPatch(polyCurve)\n        OUT = surf",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "b1404f2dbc69418195318fe7c8bbe8eb",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "9ef5635fcd304aa6896dd6a167192758",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "61c34c5e035648df841284f0b88b306c",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "5bdb1fe4010c44bc8fc65d50b1242031",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "950fe506effd4fa5b338fbb95fdd6e0d",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "35fbb39489f742e786f33d49006de921",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.Area",
      "Replication": "Auto",
      "Description": "Returns the total surface area.\n\nSurface.Area: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "5c314a99c1f24a25a8377dd498f64742",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "323f6af1209d4beab03634dd09526c66",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6d822ab51a304171b43995f3023a28c8",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.Area",
      "Replication": "Auto",
      "Description": "Returns the total surface area.\n\nSurface.Area: double"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "WatchWidth": 35.0,
      "WatchHeight": 38.0,
      "Id": "58911b2906f645d9a6b09c3933fa83c5",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "97658bc013ff47f9ad79cc59199eaa87",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "56c667e769384ed986761fbb4d5ad908",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualizes a node's output"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "583854ae9c344ed9b07408d4b37675af",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "1f3377c2ec3b4c31918a64b5d4679ad6",
          "Name": "site",
          "Description": "site",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "00fd790ea63d41ca9ffad5f488b12d7f",
          "Name": "bldg",
          "Description": "bldg",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9e9318473d4c499498b9e0984f1bab05",
          "Name": "",
          "Description": "pr",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8bd2babb1955498d9998e6628262e6f1",
          "Name": "",
          "Description": "prc",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "pr = (site-bldg);\nprc = Math.Round((pr/site)*100);"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "import clr  #Importing the 'Common Language Runtime' module to allow\n#us to append .NET framework modules to our Python node\nclr.AddReference('ProtoGeometry')  #Dynamo Geometry .dll\nfrom Autodesk.DesignScript.Geometry import *  #Importing everything\n\n#Definitions\ndef intoOffset(crv, offset):\n    offsets = [-offset, offset]  #Offset number in both positive \n    #and negative directions\n    lengths = []  #Create empty catchment list\n    newCurves = []  #Create empty catchment list\n    for off in offsets:  #Loop through each of these offset distances\n    # and offset curves\n        newCurves.append(crv.Offset(off))  #Append offset curves to \n        #'newCurves' catchment list\n    for nc in newCurves:  #Loop through each element inside of the \n    #newCurves list\n        lengths.append(nc.Length)  #Append curve lengths to 'lengths' \n        #catchment list\n    for nc, len in zip(newCurves, lengths):  #For each paired curve and\n    # length inside of our zipped (paired) lists do the following\n        if len == min(lengths):  #If the length of that curve matches the \n        #minimum lenght of both offset curves (i.e is internal) then do \n        #the following\n            output = nc  #Define a variable called Output\n\n    return output  #Return output\n    \n#Inputs\ncrv = IN[0]  #Curves list\noffset = IN[1]  #Offset number\n    \nOUT = intoOffset(crv,offset)  #Calling our function and appending to the \n#'OUT' output port",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "73d112b007344202816550da9a8b3b9e",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "77469c90d80c4ef6a2c93ea72de44e68",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2ee9cbc0c55745ab96c7bd898bf84fb0",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a79efcbc6857493398408078f603e8fe",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "b4dad0b988764e88896c5adf24b01ccf",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "b3a2d8f7d4cd49fca029443d2d76ab42",
          "Name": "buildingSite",
          "Description": "buildingSite",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8030f4750cc744859ba8506392432cdb",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "buildingSite;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "722f1771e61a41f08a72df37b44c2876",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "d292f00c5ef244babaa4787b55b773e7",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9bcfb48e62674b2e9a4ccd236ed4bc0e",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f07e7f8e7f2c4e66972498b43e31e0b2",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "b5fd0fa8f3fd4e5699a08e7fee3726ab",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "d86c931635634823ab663ca5aa7d9dec",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cdbf85c5a6554518a38f0b9631e30043",
          "Name": "Curve[]",
          "Description": "Curve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Element.Curves",
      "Replication": "Auto",
      "Description": "The Curves in this Element\n\nElement.Curves: Curve[]"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "a493ed5eeb8640c7b31ded6b07909d03",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "9fcf40f297df4c37a958ca9f3ab28ef8",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6ccac493678f419f966862efd6f83ea0",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b5c1b2bd66b94a798b8b452e1d4730f5",
          "Name": "item2",
          "Description": "Item Index #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7f94efc48839405b9ffa1a2fd9aa05ae",
          "Name": "item3",
          "Description": "Item Index #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b6329c8f30ba401f91066cd69575dc8e",
          "Name": "item4",
          "Description": "Item Index #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8190d9e67c0745399bea374649368d86",
          "Name": "item5",
          "Description": "Item Index #5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8214f63b0e954784b1d6e0b130a0d3fc",
          "Name": "item6",
          "Description": "Item Index #6",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "427137ea06394111a4c4e550ee7d1fcc",
          "Name": "item7",
          "Description": "Item Index #7",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1d0af56fc4ff4569b175c4afd7e91803",
          "Name": "item8",
          "Description": "Item Index #8",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "786dfed35dff4b549742fe64cc4ff987",
          "Name": "item9",
          "Description": "Item Index #9",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3e4a101f2d754581a41777adf7b36442",
          "Name": "item10",
          "Description": "Item Index #10",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cdc3aa133994421fbe020a5bc4481c3a",
          "Name": "item11",
          "Description": "Item Index #11",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e7e58729728f4ec38a451890575e75d0",
          "Name": "item12",
          "Description": "Item Index #12",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e224bcdb4e004214adf88ea53ceb9a86",
          "Name": "item13",
          "Description": "Item Index #13",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0c394ae71c6f46a0a016d4e0f4af0c13",
          "Name": "list",
          "Description": "A list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list from the given inputs"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.IntegerSlider, CoreNodeModels",
      "NumberType": "Integer",
      "MaximumValue": 4500,
      "MinimumValue": 500,
      "StepValue": 10,
      "Id": "0255ecbf95bc4c77b9cb265a6ec274e5",
      "NodeType": "NumberInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b6375d6c00854d4cb497dea857fcecb7",
          "Name": "",
          "Description": "Int64",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Produces integer values",
      "InputValue": 3280
    },
    {
      "ConcreteType": "CoreNodeModels.Input.IntegerSlider, CoreNodeModels",
      "NumberType": "Integer",
      "MaximumValue": 200000,
      "MinimumValue": 4000,
      "StepValue": 1000,
      "Id": "2b18989505564bd58244de17c878f678",
      "NodeType": "NumberInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "099752b31fa94517bb7c74a0bb161220",
          "Name": "",
          "Description": "Int64",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Produces integer values",
      "InputValue": 85000
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleSlider, CoreNodeModels",
      "NumberType": "Double",
      "MaximumValue": 3500.0,
      "MinimumValue": 2500.0,
      "StepValue": 100.0,
      "Id": "f9c101d2a75042ef83ac38f2d4b9d451",
      "NodeType": "NumberInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "bd783c3c3e2a481fb7d1b74a80402724",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Produces numeric values",
      "InputValue": 3100.0
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleSlider, CoreNodeModels",
      "NumberType": "Double",
      "MaximumValue": 1.0,
      "MinimumValue": 0.0,
      "StepValue": 0.01,
      "Id": "79f401d622324ded938229060f712b23",
      "NodeType": "NumberInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "dafc5d030e91446dafac08cca4fa7eb3",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Produces numeric values",
      "InputValue": 0.53
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleSlider, CoreNodeModels",
      "NumberType": "Double",
      "MaximumValue": 1.0,
      "MinimumValue": 0.0,
      "StepValue": 0.01,
      "Id": "5931a0906cc24206a38f793d72c90145",
      "NodeType": "NumberInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8ef57fedec3045e19beb57d1d6ae7492",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Produces numeric values",
      "InputValue": 0.72
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleSlider, CoreNodeModels",
      "NumberType": "Double",
      "MaximumValue": 1.0,
      "MinimumValue": 0.0,
      "StepValue": 0.01,
      "Id": "4000fd783f0149f7ae8852e3d9e4dacf",
      "NodeType": "NumberInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2ff3e2ef95204b638c854047b9999ce3",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Produces numeric values",
      "InputValue": 0.52
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleSlider, CoreNodeModels",
      "NumberType": "Double",
      "MaximumValue": 1.0,
      "MinimumValue": 0.0,
      "StepValue": 0.01,
      "Id": "8874529a6cf547eab944589363b8d0bb",
      "NodeType": "NumberInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3263462d90024e70bc6c06da7b233ec3",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Produces numeric values",
      "InputValue": 0.61
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleSlider, CoreNodeModels",
      "NumberType": "Double",
      "MaximumValue": 1.0,
      "MinimumValue": 0.0,
      "StepValue": 0.01,
      "Id": "185c4b4093984f82a30f3108b39e2b86",
      "NodeType": "NumberInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c1d060f5a2cf441db5fd610cd79c3dde",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Produces numeric values",
      "InputValue": 0.26
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleSlider, CoreNodeModels",
      "NumberType": "Double",
      "MaximumValue": 1.0,
      "MinimumValue": 0.0,
      "StepValue": 0.01,
      "Id": "ce04ea28426a4da3bf4260e3d9bf0f2e",
      "NodeType": "NumberInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f513b3d77237490a9c82cc2727e343ef",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Produces numeric values",
      "InputValue": 0.87
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleSlider, CoreNodeModels",
      "NumberType": "Double",
      "MaximumValue": 1.0,
      "MinimumValue": 0.0,
      "StepValue": 0.01,
      "Id": "df07e5f3e4164ee393a5d96ee0b2d6dd",
      "NodeType": "NumberInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5d8c1376baf64f0aa7e233a0499b8c78",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Produces numeric values",
      "InputValue": 0.56
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleSlider, CoreNodeModels",
      "NumberType": "Double",
      "MaximumValue": 1.0,
      "MinimumValue": 0.0,
      "StepValue": 0.01,
      "Id": "2f20e99c197347129c6ff0ddf3f6884a",
      "NodeType": "NumberInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ba590f8e73f942b4aadbce4c30f7b3d4",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Produces numeric values",
      "InputValue": 0.44
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleSlider, CoreNodeModels",
      "NumberType": "Double",
      "MaximumValue": 1.0,
      "MinimumValue": 0.0,
      "StepValue": 0.01,
      "Id": "caefb9322b8c41109223baad2dbe652f",
      "NodeType": "NumberInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "154f07592e2449a08c73c54ab637cc60",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Produces numeric values",
      "InputValue": 0.31
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleSlider, CoreNodeModels",
      "NumberType": "Double",
      "MaximumValue": 1.0,
      "MinimumValue": 0.0,
      "StepValue": 0.01,
      "Id": "62d8d0455da244f8a26125c6eed5e62e",
      "NodeType": "NumberInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4425af86554a487581af521a3e3eed9b",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Produces numeric values",
      "InputValue": 0.34
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleSlider, CoreNodeModels",
      "NumberType": "Double",
      "MaximumValue": 1.0,
      "MinimumValue": 0.0,
      "StepValue": 0.01,
      "Id": "fbb01117314a473db6b3defb3781c6af",
      "NodeType": "NumberInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "70d1c7323d6e4fe99e65242bbd0103ba",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Produces numeric values",
      "InputValue": 0.59
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleSlider, CoreNodeModels",
      "NumberType": "Double",
      "MaximumValue": 1.0,
      "MinimumValue": 0.0,
      "StepValue": 0.01,
      "Id": "c132210d89b24108b27a9f10404fcba8",
      "NodeType": "NumberInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0d679220c9e54ba1ac34fb09d77ed677",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Produces numeric values",
      "InputValue": 0.71
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleSlider, CoreNodeModels",
      "NumberType": "Double",
      "MaximumValue": 1.0,
      "MinimumValue": 0.0,
      "StepValue": 0.01,
      "Id": "edb603efdc2c4f5a8c0291e1c9e1f231",
      "NodeType": "NumberInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "19833b3d0219428c8dd041fda58e19a6",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Produces numeric values",
      "InputValue": 0.17
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleSlider, CoreNodeModels",
      "NumberType": "Double",
      "MaximumValue": 1.0,
      "MinimumValue": 0.0,
      "StepValue": 0.01,
      "Id": "7c9a2197fdc341c89f1c132ad39bf01b",
      "NodeType": "NumberInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "48ff8735b7914eaba03dea42c722f09f",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Produces numeric values",
      "InputValue": 0.81
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "34ee461215f540ca96d442011ad6e3db",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "ec5d62d688c441719e47039f1d4c8aa3",
          "Name": "solids",
          "Description": "A collection of solids\n\nSolid[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4516cdc68bb94e83acc9ccabf3e06cdc",
          "Name": "Solid",
          "Description": "Solid",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Solid.ByUnion@Autodesk.DesignScript.Geometry.Solid[]",
      "Replication": "Auto",
      "Description": "Union a collection of solids into one solid\n\nSolid.ByUnion (solids: Solid[]): Solid"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "ee7ca10614c6473f8093c766286c350e",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "e62b9f0829f64f0aa8a3d6ce775079a8",
          "Name": "geometry",
          "Description": "A Solid or Surface that will be tessellated and placed in the Revit model as a DirectShape\n\nGeometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2c872167dc414608a8d84cd5deff35ae",
          "Name": "category",
          "Description": "Must be a top level Built-in Category\n\nCategory",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0f8fc526f919436299d53d98da4f9628",
          "Name": "material",
          "Description": "A Material to apply to the faces of the DirectShape\n\nMaterial\nDefault value : Revit.Elements.DirectShape.DynamoPreviewMaterial",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7f8c1193e11f40e4a2dfeb44feba5e6c",
          "Name": "name",
          "Description": "A string name for the DirectShape\n\nstring\nDefault value : \"DirectShape\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "43ced47cfbb645a3aa291c32cc88d147",
          "Name": "DirectShape",
          "Description": "A DirectShape Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.DirectShape.ByGeometry@Autodesk.DesignScript.Geometry.Geometry,Revit.Elements.Category,Revit.Elements.Material,string",
      "Replication": "Auto",
      "Description": "Create a Revit DirectShape given some geometry, a name for the shape, a Category, and Material. The geometry will be tessellated before being placed in the Revit model The category of a DirectShape cannot be changed after creation, so a new DirectShape will be generated if the category input is changed.\n\nDirectShape.ByGeometry (geometry: Geometry, category: Category, material: Material = Revit.Elements.DirectShape.DynamoPreviewMaterial, name: string = \"DirectShape\"): DirectShape"
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 245,
      "SelectedString": "OST_Floors",
      "Id": "30061647606c4e6bbe3de5cf15227ae0",
      "NodeType": "ExtensionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4fa08d78a1c84522990614b27aa6c3a1",
          "Name": "Category",
          "Description": "The selected Category.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "29bba62e0e3a448bb105ab83a96d0b40",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e985e16af3254e5e930041335b7a193b",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "\"Selected Building\";"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "d4fa1285c34b4e348be263af2ed79a74",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "4a3f3a0c5ab44447a1bcb7382c92636f",
          "Name": "name",
          "Description": "The name of the material\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b7b8185cfc8c4487bbd2fe2aa3697409",
          "Name": "Material",
          "Description": "Material",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Material.ByName@string",
      "Replication": "Auto",
      "Description": "Select a material from the current document by the name\n\nMaterial.ByName (name: string): Material"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "c19f57bfcb794921b95ad7ba83cd4568",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "91b50a501de14a4f8153e09b887b6908",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "\"Default\";"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "WatchWidth": 200.0,
      "WatchHeight": 200.0,
      "Id": "863fcdadfe684b2db35b872b77e9a350",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "e3726af092f24ba48beb40dd64df4af9",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "11aa6f6cc30e4934bbf9dd95f9eebd27",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualizes a node's output"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "043178b9d35b4fc4831444ed4e0c40d4",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "817e1f5a38e245f5ac3c7f602d62e48f",
          "Name": "seed",
          "Description": "Seed value for the random number generator.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c012a7f0c41b4dbeb1b9419467dd08cb",
          "Name": "number",
          "Description": "Random number between 0 and 1.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Random@int",
      "Replication": "Auto",
      "Description": "Generates a random double in the range of [0, 1).\n\nMath.Random (seed: int): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "b491be9236494aec9632e7445c78d0d1",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7d8661d4147c423088ca6c9a1c9f46c2",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "[91,2,5,83,9,2,8,72,1,9,41,5,3,22];"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "WatchWidth": 200.0,
      "WatchHeight": 200.0,
      "Id": "f422711c90414cf5b71c1321c89d8238",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "bdcf4b41753842fa9d1e973d9f74fb8a",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a317b64c427a49989f3aa547e10e3a8e",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualizes a node's output"
    },
    {
      "ConcreteType": "Watch3DNodeModels.Watch3D, Watch3DNodeModels",
      "WatchWidth": 200.0,
      "WatchHeight": 200.0,
      "WasExecuted": true,
      "Camera": {
        "Name": "f57b0b56-bbc2-4a8f-b9b4-8b84ff73561a Preview",
        "EyeX": -17.0,
        "EyeY": 24.0,
        "EyeZ": 50.0,
        "LookX": 12.0,
        "LookY": -13.0,
        "LookZ": -58.0,
        "UpX": 0.0,
        "UpY": 1.0,
        "UpZ": 0.0
      },
      "VariableInputPorts": true,
      "Id": "f57b0b56bbc24a8fb9b48b84ff73561a",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "1214162bd7b746bc8e1604f0a6ada7f7",
          "Name": "",
          "Description": "Incoming geometry objects.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2ee9ca2e087247239a091382bc9474d7",
          "Name": "",
          "Description": "Incoming geometry objects.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Shows a dynamic preview of geometry"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "40bb8311da5b4a679c7e353133b6422a",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "ed3bdff0aefd4664bd8c361fe3c4fa17",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8491f6fbb2964406b1168b031d2c661c",
          "Name": "distance",
          "Description": "Distance to extrude\n\ndouble\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9cb72712a54244f9935e83278fedb1ed",
          "Name": "Solid",
          "Description": "The extruded Solid",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.ExtrudeAsSolid@double",
      "Replication": "Auto",
      "Description": "Extrudes a Curve in the Normal direction by the specified distance. Curve must be closed.\n\nCurve.ExtrudeAsSolid (distance: double = 1): Solid"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "83ce94cbc50f4930ac50c3e8f92cd04e",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "87f9136c770146efa1bcf876e54bd623",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "250;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "4f84f97b34724f449f972a5297ddf2e9",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "415112486c3c4d1f82a8f9469007ba73",
          "Name": "number",
          "Description": "Number to round\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9e76645d735b444db9da53ac30b37c10",
          "Name": "digits",
          "Description": "Number of fractional digits in the return value\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b8d63316dab14465b0ce752284660f2e",
          "Name": "number",
          "Description": "The number nearest to value that contains a number of fractional digits equal to digits",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Round@double,int",
      "Replication": "Auto",
      "Description": "Rounds a number to a specified number of fractional digits.\n\nMath.Round (number: double, digits: int): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "073487134f76459b8ac437f07481af2b",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4d68ed55e2ff4ce3bf694c450fb362ef",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "2;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "a731ac3e3c2042ddb90524b60fb2c157",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "a06921be2ca7489eab0e00f7fa77eb77",
          "Name": "list",
          "Description": "List to shuffle.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3e70d88e9efb4087ae7492770dac0022",
          "Name": "list",
          "Description": "Randomized list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Shuffle@var[]..[]",
      "Replication": "Auto",
      "Description": "Shuffles a list, randomizing the order of its items.\n\nList.Shuffle (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "a553739245684100811e4d2617c8f24d",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "ab7ff5e60c404305b45c2a0d2f2a721e",
          "Name": "curves",
          "Description": "Curves to join into polycurve\n\nCurve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "29367341330c410b8dadba7437075cb0",
          "Name": "joinTolerance",
          "Description": "Tolerance to determine size of gap allowed between curves to be joined\n\ndouble\nDefault value : 0.001",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "059f66ab68044273a5993f6ad17c47fe",
          "Name": "trimCurves",
          "Description": "bool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fc9e3a6e358d41a1956e79ad239daf3d",
          "Name": "trimLength",
          "Description": "double\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9bd6760bc63448a892f458dfdc59157e",
          "Name": "PolyCurve",
          "Description": "Polycurve created by joined curves",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.PolyCurve.ByJoinedCurves@Autodesk.DesignScript.Geometry.Curve[],double,bool,double",
      "Replication": "Auto",
      "Description": "Make PolyCurve by joining curves. Flips curve as needed for connectivity. Choose a preferred join tolerance between 1e-6 and 1e-3 units.\n\nPolyCurve.ByJoinedCurves (curves: Curve[], joinTolerance: double = 0.001, trimCurves: bool = false, trimLength: double = 0): PolyCurve"
    },
    {
      "ConcreteType": "CoreNodeModels.Remember, CoreNodeModels",
      "Cache": "{\"range\":{\"high\":9.59092952210158,\"low\":0.0,\"type\":\"Finite\"},\"curves\":[{\"range\":{\"high\":1.0863571127082166,\"low\":0.0,\"type\":\"Finite\"},\"position\":{\"x\":144047.88130213425,\"y\":142792.83207982522,\"z\":0.0},\"direction\":{\"x\":-364.6890807452337,\"y\":-33110.156437391925,\"z\":0.0},\"ConcreteTypeid\":\"autodesk.geometry.curve:line-1.0.0\"},{\"range\":{\"high\":2.068170919227812,\"low\":0.0,\"type\":\"Finite\"},\"position\":{\"x\":143683.192221389,\"y\":109682.67564243329,\"z\":0.0},\"direction\":{\"x\":63022.48297963476,\"y\":-1391.8058597596882,\"z\":0.0},\"ConcreteTypeid\":\"autodesk.geometry.curve:line-1.0.0\"},{\"range\":{\"high\":1.317885499744447,\"low\":0.0,\"type\":\"Finite\"},\"position\":{\"x\":206705.67520102375,\"y\":108290.8697826736,\"z\":0.0},\"direction\":{\"x\":12681.660292359857,\"y\":38114.77543603582,\"z\":0.0},\"ConcreteTypeid\":\"autodesk.geometry.curve:line-1.0.0\"},{\"range\":{\"high\":0.4374276379865096,\"low\":0.0,\"type\":\"Finite\"},\"position\":{\"x\":219387.33549338364,\"y\":146405.6452187094,\"z\":0.0},\"direction\":{\"x\":8046.5118660185,\"y\":10630.947909670318,\"z\":0.0},\"ConcreteTypeid\":\"autodesk.geometry.curve:line-1.0.0\"},{\"range\":{\"high\":0.5372208585966648,\"low\":0.0,\"type\":\"Finite\"},\"position\":{\"x\":227433.84735940216,\"y\":157036.59312837975,\"z\":0.0},\"direction\":{\"x\":4595.148289628423,\"y\":15716.507020422363,\"z\":0.0},\"ConcreteTypeid\":\"autodesk.geometry.curve:line-1.0.0\"},{\"range\":{\"high\":1.6880842338655677,\"low\":0.0,\"type\":\"Finite\"},\"position\":{\"x\":232028.99564903055,\"y\":172753.1001488021,\"z\":0.0},\"direction\":{\"x\":-42280.54574040541,\"y\":29321.440043035866,\"z\":0.0},\"ConcreteTypeid\":\"autodesk.geometry.curve:line-1.0.0\"},{\"range\":{\"high\":2.4557832599723644,\"low\":0.0,\"type\":\"Finite\"},\"position\":{\"x\":189748.44990862516,\"y\":202074.54019183796,\"z\":0.0},\"direction\":{\"x\":-45700.568606490924,\"y\":-59281.70811201278,\"z\":0.0},\"ConcreteTypeid\":\"autodesk.geometry.curve:line-1.0.0\"}],\"ConcreteTypeid\":\"autodesk.geometry.curve:compositecurve-1.0.0\"}",
      "Id": "fb790802f3e44c6183df0b98b91f39fc",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "4a700b6686994963a9321351d57a20bd",
          "Name": ">",
          "Description": "Data to sample and store in the file.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0197cb6540934cb1ad701b648942183b",
          "Name": ">",
          "Description": "Data",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Store data passing through this node to the Dynamo file. Return the stored data if the input is null."
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.Gate, CoreNodeModels",
      "InputValue": false,
      "Id": "25e561593ae343d1866e27d8dbefc98f",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "8e3c07cfa24048028ac515e1261111c1",
          "Name": ">",
          "Description": "Data to pass to a downstream node with gated controls.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "39bdd433eca84b8fbcae670e38447e18",
          "Name": ">",
          "Description": "Data",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Block data passing through this node to downstream nodes. Node returns the input data only if the node value is set to Open.\r\n\r\nIn Generative Design workflows, this node should be used to control and block the behavior of nodes that will place elements in Revit"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "e534183219ed4dde8c56e5ba27f38c96",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "302d400921b2432b9bd763d0126aaa4b",
          "Name": "curves",
          "Description": "Curves to join into polycurve\n\nCurve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d01060a0e73c439b91227f85aff03cac",
          "Name": "joinTolerance",
          "Description": "Tolerance to determine size of gap allowed between curves to be joined\n\ndouble\nDefault value : 0.001",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2f311578f91e433ead5308e1d006aa39",
          "Name": "trimCurves",
          "Description": "bool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b84f5d5a51c64874bc819c828aae539c",
          "Name": "trimLength",
          "Description": "double\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "caaf916545a045a390f9f960191b84a7",
          "Name": "PolyCurve",
          "Description": "Polycurve created by joined curves",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.PolyCurve.ByJoinedCurves@Autodesk.DesignScript.Geometry.Curve[],double,bool,double",
      "Replication": "Auto",
      "Description": "Make PolyCurve by joining curves. Flips curve as needed for connectivity. Choose a preferred join tolerance between 1e-6 and 1e-3 units.\n\nPolyCurve.ByJoinedCurves (curves: Curve[], joinTolerance: double = 0.001, trimCurves: bool = false, trimLength: double = 0): PolyCurve"
    },
    {
      "ConcreteType": "Dynamo.Nodes.DSModelElementMultipleSelection, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "InstanceId": [
        "d4203209-ccb7-4332-ba94-0c139e5292eb-000ab871",
        "d4203209-ccb7-4332-ba94-0c139e5292eb-000ab873",
        "d4203209-ccb7-4332-ba94-0c139e5292eb-000ab879",
        "d4203209-ccb7-4332-ba94-0c139e5292eb-000ab87d",
        "d4203209-ccb7-4332-ba94-0c139e5292eb-000ab87f",
        "d4203209-ccb7-4332-ba94-0c139e5292eb-000ab887",
        "d4203209-ccb7-4332-ba94-0c139e5292eb-000ab889"
      ],
      "Id": "5f18f43fb472465182ae0df3859d5389",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "93a07bdb9652437fa94d7212f6a80283",
          "Name": "Elements",
          "Description": "The selected elements.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Pick multiple elements from the Revit document."
    }
  ],
  "Connectors": [
    {
      "Start": "070eaae2b65f49db9ae8918ae13bfda7",
      "End": "997d552652394cef923560b1a384aea3",
      "Id": "1242d5adb05545708b8c1f465b8b7720",
      "IsHidden": "False"
    },
    {
      "Start": "9e0c0418e3ef4b0391f1e88d0c837a57",
      "End": "dcbb669bfd674b29af5aef8fd4c2390a",
      "Id": "e5bbe72deeef4723a28b2d8c642708e2",
      "IsHidden": "False"
    },
    {
      "Start": "0adbcffc9bef4aae8781847fab245633",
      "End": "d92baf8ed47c4ec99ead3e5956896701",
      "Id": "6bcfff2a180b4f748b97794af4bf9206",
      "IsHidden": "False"
    },
    {
      "Start": "68e71a20b971442c889ff358a27f9fc8",
      "End": "f01b9ea10a904fd3853e19fb58b40e24",
      "Id": "0792585d48ad49e991d507239d748492",
      "IsHidden": "False"
    },
    {
      "Start": "f7d8930cbe344b2cb33d7f1fea8b07d0",
      "End": "ec5d62d688c441719e47039f1d4c8aa3",
      "Id": "bfcce0e3f1e74201bb91d01a62844e34",
      "IsHidden": "False"
    },
    {
      "Start": "0e6f46b570bd4b03829e669cc23ca05f",
      "End": "2096a6c4c02c4272b09dec6979399ab6",
      "Id": "ce6bb13a0e7b4f75a2481a9ec72c3bc7",
      "IsHidden": "False"
    },
    {
      "Start": "adb3a857b0804f8da3b6906858759591",
      "End": "204a4f1a919945399fdf4f30a92c24f1",
      "Id": "fba255777ecd4f9fb047fb62ab86349f",
      "IsHidden": "False"
    },
    {
      "Start": "fa850926f1a34f138f00b22bf4f88afe",
      "End": "9259a0424ca643d1b8819bf8a6e9f4d6",
      "Id": "16e48854c6944225bc173a37c059ef02",
      "IsHidden": "False"
    },
    {
      "Start": "e15aa8529f36412f94536140b10a327b",
      "End": "6bd7833cb7a54c4d9ff78840082b917c",
      "Id": "a885415ed2f3481792adee56985f54c9",
      "IsHidden": "False"
    },
    {
      "Start": "e15aa8529f36412f94536140b10a327b",
      "End": "323f6af1209d4beab03634dd09526c66",
      "Id": "1b1bf7324aa746e0954b248b68fada69",
      "IsHidden": "False"
    },
    {
      "Start": "e15aa8529f36412f94536140b10a327b",
      "End": "dd2f2a732d8144ee81f63616c630053e",
      "Id": "0613c1932e574765a71dc4f14d3f7843",
      "IsHidden": "False"
    },
    {
      "Start": "2fccee0bf4c2474fb6e772b4ccc9e5b0",
      "End": "950fe506effd4fa5b338fbb95fdd6e0d",
      "Id": "f9500001f68146f8beabca2e424c297f",
      "IsHidden": "False"
    },
    {
      "Start": "2fccee0bf4c2474fb6e772b4ccc9e5b0",
      "End": "6f4cab62150a435da73415c2d11d2ecc",
      "Id": "2309e8997c5742baa651ee92561e933f",
      "IsHidden": "False"
    },
    {
      "Start": "1543608cb85140729b9016cdcee34538",
      "End": "1214162bd7b746bc8e1604f0a6ada7f7",
      "Id": "b94e8662c4df4250b4f481ceafed1af6",
      "IsHidden": "False"
    },
    {
      "Start": "1543608cb85140729b9016cdcee34538",
      "End": "302d400921b2432b9bd763d0126aaa4b",
      "Id": "ee75d4d93fc64b74be39b85e963e4484",
      "IsHidden": "False"
    },
    {
      "Start": "e35ffea223914693aa0245da9f0fb696",
      "End": "2b227ef4580a45fb9f818600f241275d",
      "Id": "84d89e456a184255aaa8f455a14b92a7",
      "IsHidden": "False"
    },
    {
      "Start": "5e3a80322ec44d27aed25437d48c3748",
      "End": "edef56b7da6c4e0f838536d62235778f",
      "Id": "83803c655b3c475ca274ae745bf65b9f",
      "IsHidden": "False"
    },
    {
      "Start": "16c999a62a3948a9b57222aa889c4ee3",
      "End": "2913704203ff4318bbd43575e82d1621",
      "Id": "d85c50146f1a4106a0a68b14049f83c7",
      "IsHidden": "False"
    },
    {
      "Start": "37b637dd33bd40bdba2daae6b698993d",
      "End": "0f566391b4eb4194b4cfaca0e649803f",
      "Id": "7a38dfbe167d41f5a8167821a234ac6e",
      "IsHidden": "False"
    },
    {
      "Start": "4c8f15f5401942e59e1b22530c119817",
      "End": "6fb413dfbc0e447da98326f75a1f2e14",
      "Id": "5147a5fd0d564171a52798ef3f0b307c",
      "IsHidden": "False"
    },
    {
      "Start": "4c8f15f5401942e59e1b22530c119817",
      "End": "801fc140c38741bba04ea09b2fd6b414",
      "Id": "5db459467e6d47f3adf6224366527a53",
      "IsHidden": "False"
    },
    {
      "Start": "4c8f15f5401942e59e1b22530c119817",
      "End": "b5d0b5a993664007935f70d6fbc61a3d",
      "Id": "12a34b80ce254f608e1bbdb7775f48a1",
      "IsHidden": "False"
    },
    {
      "Start": "57e0bc7ccf8841f3be9c9e496f66389d",
      "End": "f3721f9d76134205a52358660739d8f2",
      "Id": "6dd02e1e27ad4ae4997d520d0263ffa9",
      "IsHidden": "False"
    },
    {
      "Start": "18d4b2ffe6c04727a5865afc54836e64",
      "End": "846c03bd97284e229010b2dce74f3f85",
      "Id": "74316e61b69c44eea1458249e023a450",
      "IsHidden": "False"
    },
    {
      "Start": "d0e1b76daa0d42d7affa0fd5914d5d6c",
      "End": "fb6a271c1b544245becda79a330cca16",
      "Id": "df586943a5ec43fab856fb18a554eb3f",
      "IsHidden": "False"
    },
    {
      "Start": "cdcc6cab42f2403aa589348c156c0120",
      "End": "bae7bf23ccc849f99b6c07a4bb399892",
      "Id": "239e69db3bf44d379d6e93062b0eeac0",
      "IsHidden": "False"
    },
    {
      "Start": "06fdd64fefb847bba20542938116e47e",
      "End": "7c6663eab5cb49ac8acad6a54ff9ee2c",
      "Id": "15725e12683b40359f1f22ee4c48b9c7",
      "IsHidden": "False"
    },
    {
      "Start": "714506dc8fe443f2b2224968ff079781",
      "End": "1307493d0d834bdaa0dd29580e51426e",
      "Id": "168bd20ce83a4ff890500168ac76a4a2",
      "IsHidden": "False"
    },
    {
      "Start": "79c9fa384bec406fb1e4ee49ee3997cd",
      "End": "9861629e974e488888d12c9093e594cf",
      "Id": "00277093b8b94566a79349b33ae050d0",
      "IsHidden": "False"
    },
    {
      "Start": "511707d823844bff936fd4ac825742b8",
      "End": "95210a185a2f4445917a3b46dfa46391",
      "Id": "71d1bcbeb3b7408b97a8b9e3d9ebf86a",
      "IsHidden": "False"
    },
    {
      "Start": "b123066eab8a465e8d50b1f0568c55c8",
      "End": "f43c0fa6fd1f4fbda9cc7634b4d0eaf3",
      "Id": "be495ab4d88a48378ce4c67a9f86b152",
      "IsHidden": "False"
    },
    {
      "Start": "3ba4ec5c3cf44b86986ba6d91a720baf",
      "End": "198e057aeb89424882e95bf49424cdc2",
      "Id": "82c40022bc2d4290b3a298ff4ebc235e",
      "IsHidden": "False"
    },
    {
      "Start": "11be079cfd164e9eb484acf661859e41",
      "End": "d68efe86695f4b7aa75fe16f3d2f52ad",
      "Id": "67443a9c59f54326a8848d7707a580dc",
      "IsHidden": "False"
    },
    {
      "Start": "2eea52917716417d9c4933c094bb9e15",
      "End": "316535e920b846fe947dcc2b0d6f9b89",
      "Id": "64b85fdfd2704dca8211722b527364f5",
      "IsHidden": "False"
    },
    {
      "Start": "f1a4fa066334428ea906fdd39ba95cb5",
      "End": "3cefc78cc3e64040bc3a618ddf604394",
      "Id": "a3144cb031f24c25b95b577f214887ef",
      "IsHidden": "False"
    },
    {
      "Start": "f1a4fa066334428ea906fdd39ba95cb5",
      "End": "249bdcb385ee4226b3346e71c6b545ff",
      "Id": "3fee4ee74903434dbdbf788ecc6c1b16",
      "IsHidden": "False"
    },
    {
      "Start": "38904ff5d178449bb74ccd91b8fdca0b",
      "End": "79f0d69fbb7f41e1a81bb0c0ea47b932",
      "Id": "a62a3675cdf84810a727b2f47e52e023",
      "IsHidden": "False"
    },
    {
      "Start": "8acd139caade4c9dbcf2f01de59fdac9",
      "End": "9ef5635fcd304aa6896dd6a167192758",
      "Id": "c81b47b9cb9f4300b6bc1321beb7c947",
      "IsHidden": "False"
    },
    {
      "Start": "61c34c5e035648df841284f0b88b306c",
      "End": "d9c61740a3fe49d98292237c94aab617",
      "Id": "2ddff63347bb48c694450f17e2513f4e",
      "IsHidden": "False"
    },
    {
      "Start": "35fbb39489f742e786f33d49006de921",
      "End": "00fd790ea63d41ca9ffad5f488b12d7f",
      "Id": "114fa157659f40cfac2f8b2bb27f3090",
      "IsHidden": "False"
    },
    {
      "Start": "6d822ab51a304171b43995f3023a28c8",
      "End": "1f3377c2ec3b4c31918a64b5d4679ad6",
      "Id": "07da2b434b064f199f668b7d4207ad9a",
      "IsHidden": "False"
    },
    {
      "Start": "8bd2babb1955498d9998e6628262e6f1",
      "End": "97658bc013ff47f9ad79cc59199eaa87",
      "Id": "b22806295c6a4ca68b22e8900cc29d9d",
      "IsHidden": "False"
    },
    {
      "Start": "a79efcbc6857493398408078f603e8fe",
      "End": "83bd133e789b4ae3b1696e871b1fd890",
      "Id": "7a8243fc092e4d9c9a98818412bac21d",
      "IsHidden": "False"
    },
    {
      "Start": "a79efcbc6857493398408078f603e8fe",
      "End": "bef999d3f9734d4daf0c7adf54812131",
      "Id": "65c1b56c81bc40cabb529c980fa8fc46",
      "IsHidden": "False"
    },
    {
      "Start": "8030f4750cc744859ba8506392432cdb",
      "End": "4a700b6686994963a9321351d57a20bd",
      "Id": "2b3d5736ddc54121a5a8ed835f58edef",
      "IsHidden": "False"
    },
    {
      "Start": "f07e7f8e7f2c4e66972498b43e31e0b2",
      "End": "ab7ff5e60c404305b45c2a0d2f2a721e",
      "Id": "e460bcc9e5194445a294939e5c7a1841",
      "IsHidden": "False"
    },
    {
      "Start": "cdbf85c5a6554518a38f0b9631e30043",
      "End": "d292f00c5ef244babaa4787b55b773e7",
      "Id": "bce6d58e8ce54ff6bf3875b31f38bb8c",
      "IsHidden": "False"
    },
    {
      "Start": "0c394ae71c6f46a0a016d4e0f4af0c13",
      "End": "e3726af092f24ba48beb40dd64df4af9",
      "Id": "cf9be2a881444cd2a9700ebb8381adc9",
      "IsHidden": "False"
    },
    {
      "Start": "b6375d6c00854d4cb497dea857fcecb7",
      "End": "2ee9cbc0c55745ab96c7bd898bf84fb0",
      "Id": "b871947849aa4fd9afaf00cfd429ca64",
      "IsHidden": "False"
    },
    {
      "Start": "099752b31fa94517bb7c74a0bb161220",
      "End": "79257e5dff0e48f1850e85db254f0986",
      "Id": "ca90eafc37c34f199f4e289377f783cd",
      "IsHidden": "False"
    },
    {
      "Start": "bd783c3c3e2a481fb7d1b74a80402724",
      "End": "ff1f09560a53469197520608cc4e3703",
      "Id": "3748263510eb42d8b31e7f602f0bc194",
      "IsHidden": "False"
    },
    {
      "Start": "bd783c3c3e2a481fb7d1b74a80402724",
      "End": "48188bcbe58c4cafae5a2e6521cbd480",
      "Id": "37ea9cbcbdbe421ab226bda4da4d25a3",
      "IsHidden": "False"
    },
    {
      "Start": "dafc5d030e91446dafac08cca4fa7eb3",
      "End": "9fcf40f297df4c37a958ca9f3ab28ef8",
      "Id": "c2037ca308334a41ae862c1184c5db6b",
      "IsHidden": "False"
    },
    {
      "Start": "8ef57fedec3045e19beb57d1d6ae7492",
      "End": "6ccac493678f419f966862efd6f83ea0",
      "Id": "1c2e69b16b4a4e00b7947357608cafcc",
      "IsHidden": "False"
    },
    {
      "Start": "2ff3e2ef95204b638c854047b9999ce3",
      "End": "7f94efc48839405b9ffa1a2fd9aa05ae",
      "Id": "310737359d0e4f70be69b855529cf46b",
      "IsHidden": "False"
    },
    {
      "Start": "3263462d90024e70bc6c06da7b233ec3",
      "End": "b5c1b2bd66b94a798b8b452e1d4730f5",
      "Id": "7fb09b2539c143fcbf0faef2fadaf597",
      "IsHidden": "False"
    },
    {
      "Start": "c1d060f5a2cf441db5fd610cd79c3dde",
      "End": "8190d9e67c0745399bea374649368d86",
      "Id": "3268a6ed99804f2c8ba0b30c1b92f960",
      "IsHidden": "False"
    },
    {
      "Start": "f513b3d77237490a9c82cc2727e343ef",
      "End": "b6329c8f30ba401f91066cd69575dc8e",
      "Id": "39c49e30db824118a0c19f0255ecbe43",
      "IsHidden": "False"
    },
    {
      "Start": "5d8c1376baf64f0aa7e233a0499b8c78",
      "End": "427137ea06394111a4c4e550ee7d1fcc",
      "Id": "8cec4b23d9574dbc8082c160d0d7e017",
      "IsHidden": "False"
    },
    {
      "Start": "ba590f8e73f942b4aadbce4c30f7b3d4",
      "End": "8214f63b0e954784b1d6e0b130a0d3fc",
      "Id": "21557ead78f74d5d8a26b82ce2c44881",
      "IsHidden": "False"
    },
    {
      "Start": "154f07592e2449a08c73c54ab637cc60",
      "End": "786dfed35dff4b549742fe64cc4ff987",
      "Id": "66c03f0e4e19482ea263825bc80aec7b",
      "IsHidden": "False"
    },
    {
      "Start": "4425af86554a487581af521a3e3eed9b",
      "End": "1d0af56fc4ff4569b175c4afd7e91803",
      "Id": "ba24a6d255744709a98046dd8dcc5859",
      "IsHidden": "False"
    },
    {
      "Start": "70d1c7323d6e4fe99e65242bbd0103ba",
      "End": "3e4a101f2d754581a41777adf7b36442",
      "Id": "ea34bc2d7fd446bda551fd2a40f9f46c",
      "IsHidden": "False"
    },
    {
      "Start": "0d679220c9e54ba1ac34fb09d77ed677",
      "End": "cdc3aa133994421fbe020a5bc4481c3a",
      "Id": "2b2dd59d43a0404ba76d3b5cef8d35a3",
      "IsHidden": "False"
    },
    {
      "Start": "19833b3d0219428c8dd041fda58e19a6",
      "End": "e7e58729728f4ec38a451890575e75d0",
      "Id": "155120355a2e42588d7628e971419a2c",
      "IsHidden": "False"
    },
    {
      "Start": "48ff8735b7914eaba03dea42c722f09f",
      "End": "e224bcdb4e004214adf88ea53ceb9a86",
      "Id": "ec334650453746c9bc784d2504eb9ec5",
      "IsHidden": "False"
    },
    {
      "Start": "4516cdc68bb94e83acc9ccabf3e06cdc",
      "End": "68d668d188454801853fe8fa12c490aa",
      "Id": "7b5615296eb7431d98680adbddcc6144",
      "IsHidden": "False"
    },
    {
      "Start": "4fa08d78a1c84522990614b27aa6c3a1",
      "End": "2c872167dc414608a8d84cd5deff35ae",
      "Id": "72d3a3b61c1244dfa478739279391ee6",
      "IsHidden": "False"
    },
    {
      "Start": "e985e16af3254e5e930041335b7a193b",
      "End": "7f8c1193e11f40e4a2dfeb44feba5e6c",
      "Id": "297754f1e9f048ffa1ab54347f82bd9e",
      "IsHidden": "False"
    },
    {
      "Start": "b7b8185cfc8c4487bbd2fe2aa3697409",
      "End": "0f8fc526f919436299d53d98da4f9628",
      "Id": "63a488ddae7b42d1ab6daa6b39bf2dd8",
      "IsHidden": "False"
    },
    {
      "Start": "91b50a501de14a4f8153e09b887b6908",
      "End": "4a3f3a0c5ab44447a1bcb7382c92636f",
      "Id": "7a64572f79dd465d8be6f4c12e3f7eb1",
      "IsHidden": "False"
    },
    {
      "Start": "c012a7f0c41b4dbeb1b9419467dd08cb",
      "End": "bdcf4b41753842fa9d1e973d9f74fb8a",
      "Id": "d39c3080106143f6b2762317933d5076",
      "IsHidden": "False"
    },
    {
      "Start": "7d8661d4147c423088ca6c9a1c9f46c2",
      "End": "a06921be2ca7489eab0e00f7fa77eb77",
      "Id": "dd75340fa60d42fd804ecbd4e6fc2715",
      "IsHidden": "False"
    },
    {
      "Start": "a317b64c427a49989f3aa547e10e3a8e",
      "End": "415112486c3c4d1f82a8f9469007ba73",
      "Id": "c6b1af4e0bdf44a5a63497bf8c3875f0",
      "IsHidden": "False"
    },
    {
      "Start": "9cb72712a54244f9935e83278fedb1ed",
      "End": "8e3c07cfa24048028ac515e1261111c1",
      "Id": "58689aad7f3f41a484293d909bcb74f0",
      "IsHidden": "False"
    },
    {
      "Start": "87f9136c770146efa1bcf876e54bd623",
      "End": "8491f6fbb2964406b1168b031d2c661c",
      "Id": "3c8891e51e9f41f8a7232c6aca6c24a2",
      "IsHidden": "False"
    },
    {
      "Start": "b8d63316dab14465b0ce752284660f2e",
      "End": "83cabaaf567a40f78712ce481bb79b9d",
      "Id": "8177eaca41224a00a906b097ff07673a",
      "IsHidden": "False"
    },
    {
      "Start": "4d68ed55e2ff4ce3bf694c450fb362ef",
      "End": "9e76645d735b444db9da53ac30b37c10",
      "Id": "da6f45f421e643feb0b7a4dcb9d10c51",
      "IsHidden": "False"
    },
    {
      "Start": "3e70d88e9efb4087ae7492770dac0022",
      "End": "817e1f5a38e245f5ac3c7f602d62e48f",
      "Id": "e521c73e66804303b6daba2e8525f2fd",
      "IsHidden": "False"
    },
    {
      "Start": "9bd6760bc63448a892f458dfdc59157e",
      "End": "b3a2d8f7d4cd49fca029443d2d76ab42",
      "Id": "f904736b48bd4775a75cd00f7bbccc14",
      "IsHidden": "False"
    },
    {
      "Start": "0197cb6540934cb1ad701b648942183b",
      "End": "77469c90d80c4ef6a2c93ea72de44e68",
      "Id": "37281f30515a489484d5ce2fc46c4e56",
      "IsHidden": "False"
    },
    {
      "Start": "39bdd433eca84b8fbcae670e38447e18",
      "End": "e62b9f0829f64f0aa8a3d6ce775079a8",
      "Id": "00a0867525e148ffa245eb5ffbcc3802",
      "IsHidden": "False"
    },
    {
      "Start": "caaf916545a045a390f9f960191b84a7",
      "End": "40781cfdc7eb47ad9da0a8982354593a",
      "Id": "b2729f0cbc7e4706acf692474fa7aeed",
      "IsHidden": "False"
    },
    {
      "Start": "caaf916545a045a390f9f960191b84a7",
      "End": "9e4fb430c5a24ffb99bbca19cef94ade",
      "Id": "95ecc1f2bd974dd3beb0ae4c924504ea",
      "IsHidden": "False"
    },
    {
      "Start": "caaf916545a045a390f9f960191b84a7",
      "End": "78acf4067cfe4ca291ec7df8e4df6be7",
      "Id": "7d939d34df3c46eeb015633031504038",
      "IsHidden": "False"
    },
    {
      "Start": "caaf916545a045a390f9f960191b84a7",
      "End": "ed3bdff0aefd4664bd8c361fe3c4fa17",
      "Id": "d697565b0655439cb3f4b8168bebc1aa",
      "IsHidden": "False"
    },
    {
      "Start": "93a07bdb9652437fa94d7212f6a80283",
      "End": "d86c931635634823ab663ca5aa7d9dec",
      "Id": "dc62052d98c54c3eac31a591e42ce535",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "EnableLegacyPolyCurveBehavior": true,
  "Thumbnail": "",
  "GraphDocumentationURL": "https://www.generativedesign.org/04-sample-workflows/04-02_architectural-workflows/04-02-01_building-mass-generator",
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "3.2",
      "Data": {}
    },
    {
      "ExtensionGuid": "DFBD9CC0-DB40-457A-939E-8C8555555A9D",
      "Name": "Generative Design",
      "Version": "8.1",
      "Data": {
        "DefaultStudySettings": ""
      }
    }
  ],
  "Author": "Dynamo Team",
  "Linting": {
    "activeLinter": "Generative Design",
    "activeLinterId": "DFBD9CC0-DB40-457A-939E-8C8555555A9D",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 100.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "3.3.0.6316",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "_Background Preview",
      "EyeX": 299665.75,
      "EyeY": 88035.9765625,
      "EyeZ": -152903.046875,
      "LookX": -95151.9375,
      "LookY": -44187.578125,
      "LookZ": 10702.875,
      "UpX": -0.2132686972618103,
      "UpY": 0.9766991138458252,
      "UpZ": 0.02398892119526863
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "Id": "32af6cba5eaf4fd9b7a39752cf4b1202",
        "Name": "Geometry.Translate",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 8823.162302260713,
        "Y": 1286.4935788763817
      },
      {
        "Id": "e41ab09e3ecb4b9c911435779b2e7d49",
        "Name": "Vector.ZAxis",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 8511.81920189239,
        "Y": 1610.4464869290016
      },
      {
        "Id": "19dc5699b7b743deaf9324427405efb5",
        "Name": "List.Insert",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 9078.511628307087,
        "Y": 1425.6549327091002
      },
      {
        "Id": "6d129bc876f440ca81c40a6c23155c6b",
        "Name": "List.LastItem",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 8477.427658450952,
        "Y": 1445.1603654764108
      },
      {
        "Id": "139e9f9452474392b25df55f50511224",
        "Name": "Solid.ByLoft",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 9363.75710768772,
        "Y": 1412.2867447143976
      },
      {
        "Id": "89c7122e04cb4a6daa2f84b92122ef86",
        "Name": "List.Count",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 8276.558740810833,
        "Y": 1328.7514127217817
      },
      {
        "Id": "969bbc0c91a6422592691641590d8bbd",
        "Name": "GeometryColor.ByGeometryColor",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 10477.067284624312,
        "Y": 1114.2606916004925
      },
      {
        "Id": "a0422580bbc34fa1943658f03d4c9045",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 9956.710106670585,
        "Y": 1259.0640100832354
      },
      {
        "Id": "8eb018b47b904f28bf417e9043d6c5dd",
        "Name": "Surface.ByPatch",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 2797.132003345133,
        "Y": 1090.1416871820152
      },
      {
        "Id": "a6941d472c834a58a008ce5a9fda4c82",
        "Name": "Python Script || External PolyCurve Generator",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 4826.429673097517,
        "Y": 1091.242734544918
      },
      {
        "Id": "41a0f54d37fc440187aade0b8be46a1e",
        "Name": "Surface.PerimeterCurves",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 6816.43639090948,
        "Y": 1082.9943238453598
      },
      {
        "Id": "d1df8d4cdd404822a7691ae92d3d585f",
        "Name": "Python Script || Generate Randomised Towers",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 5754.884316785451,
        "Y": 965.7799451547223
      },
      {
        "Id": "984e6515fb8e407084a99a1d8bf947f6",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 6312.186208249472,
        "Y": 957.6363783773495
      },
      {
        "Id": "72c8d2bf8d4549d7ad79514f21d7d30a",
        "Name": "Geometry.Translate",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 6498.9027533168655,
        "Y": 1012.5950876440468
      },
      {
        "Id": "8a66850cce8b4e2889a4bf05778c15aa",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 8143.719863477012,
        "Y": 656.5292403631222
      },
      {
        "Id": "117e1b984d7d48a7ad508884794fffff",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 7661.878898767327,
        "Y": 656.5292403631222
      },
      {
        "Id": "dcfa2031846b4409bfed8423b35d3f39",
        "Name": "Surface.Area",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 7892.7993811221695,
        "Y": 656.5292403631222
      },
      {
        "Id": "8a62cf03c3254d9197d29e2c972d10a1",
        "Name": "OUT_Total Building Area",
        "IsSetAsInput": false,
        "IsSetAsOutput": true,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 9092.364730042744,
        "Y": 588.2141184946821
      },
      {
        "Id": "36bf416ede024fd8a996a51b2d13242c",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 8373.460041679662,
        "Y": 656.5292403631222
      },
      {
        "Id": "cc162b78079f47caba573472ec92b67d",
        "Name": "Python Script || Lift Provision",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 8521.18736734854,
        "Y": 858.4574395313513
      },
      {
        "Id": "05a07d68a540445b9648669bf233f1f6",
        "Name": "OUT_Lift Provision Area ",
        "IsSetAsInput": false,
        "IsSetAsOutput": true,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 9105.732918037447,
        "Y": 755.7336777384329
      },
      {
        "Id": "b037365316aa4e128df0433f5a617826",
        "Name": "GeometryColor.ByGeometryColor",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 10477.843503563125,
        "Y": 1306.7416323457662
      },
      {
        "Id": "b4677a52173f462d83eb776ac4fe9c7a",
        "Name": "List.Chop",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 3476.940405775993,
        "Y": 1345.3354706867894
      },
      {
        "Id": "6138fd4be1b6475ab0ac7578cdaeea5d",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 3302.7027573522128,
        "Y": 1371.6211849725037
      },
      {
        "Id": "ccfcf61d20cc404ea74012308d2c2f7e",
        "Name": "Surface.PointAtParameter",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 4325.723744837045,
        "Y": 1231.1756512987795
      },
      {
        "Id": "828e4680e9274a578c222b9ca6231682",
        "Name": "List.Transpose",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 3891.1499549368727,
        "Y": 1379.3680433949876
      },
      {
        "Id": "f748a7770417451980e486114ca630ff",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 4155.312945316583,
        "Y": 1332.493004327307
      },
      {
        "Id": "d97d616528d74362b8a056251fe11db4",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 2800.716577427987,
        "Y": 1283.4444580448435
      },
      {
        "Id": "df85817211f64e10bfa546e68ee31e57",
        "Name": "Surface.PointAtParameter",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 3128.1089585176123,
        "Y": 1086.7357991415467
      },
      {
        "Id": "58421958e1dd4247928224759ec9180e",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 3465.221646009073,
        "Y": 1057.4388997242465
      },
      {
        "Id": "b1404f2dbc69418195318fe7c8bbe8eb",
        "Name": "Python Script || External PolyCurve Generator",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 3803.25925668497,
        "Y": 1040.5659249710902
      },
      {
        "Id": "5bdb1fe4010c44bc8fc65d50b1242031",
        "Name": "Surface.Area",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 7660.9461994093435,
        "Y": 561.9651718157183
      },
      {
        "Id": "5c314a99c1f24a25a8377dd498f64742",
        "Name": "Surface.Area",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 7660.94619940934,
        "Y": 458.7349272541763
      },
      {
        "Id": "58911b2906f645d9a6b09c3933fa83c5",
        "Name": "OUT_Public Realm Area",
        "IsSetAsInput": false,
        "IsSetAsOutput": true,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 9094.274471184845,
        "Y": 423.6256846032854
      },
      {
        "Id": "583854ae9c344ed9b07408d4b37675af",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 7997.3389969861855,
        "Y": 502.02690519658375
      },
      {
        "Id": "73d112b007344202816550da9a8b3b9e",
        "Name": "Python Script || Internal Boundary Offset",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 1982.0427504534782,
        "Y": 1057.8179390904538
      },
      {
        "Id": "b4dad0b988764e88896c5adf24b01ccf",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 1032.5983834642575,
        "Y": 1014.3981791242863
      },
      {
        "Id": "722f1771e61a41f08a72df37b44c2876",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": -279.58674887709685,
        "Y": 855.1017413985438
      },
      {
        "Id": "b5fd0fa8f3fd4e5699a08e7fee3726ab",
        "Name": "Element.Curves",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -550.5967706503006,
        "Y": 855.1017413985438
      },
      {
        "Id": "a493ed5eeb8640c7b31ded6b07909d03",
        "Name": "List Create",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 513.132085136052,
        "Y": 1774.8900226023693
      },
      {
        "Id": "0255ecbf95bc4c77b9cb265a6ec274e5",
        "Name": "IN_Site Offset",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -959.0314617136369,
        "Y": 1111.355491890486
      },
      {
        "Id": "2b18989505564bd58244de17c878f678",
        "Name": "IN_Building Height",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -955.8711993704578,
        "Y": 1275.4286898531386
      },
      {
        "Id": "f9c101d2a75042ef83ac38f2d4b9d451",
        "Name": "IN_FloorHeight",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -952.7109370272769,
        "Y": 1446.1465583504742
      },
      {
        "Id": "79f401d622324ded938229060f712b23",
        "Name": "Point 1.U",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -955.6551021382425,
        "Y": 1622.10446537309
      },
      {
        "Id": "5931a0906cc24206a38f793d72c90145",
        "Name": "Point 1.V",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -951.9286078963191,
        "Y": 1992.4393682409982
      },
      {
        "Id": "4000fd783f0149f7ae8852e3d9e4dacf",
        "Name": "Point 2.V",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -954.4403626283897,
        "Y": 2158.168858479559
      },
      {
        "Id": "8874529a6cf547eab944589363b8d0bb",
        "Name": "Point 2.U",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -955.6551021382425,
        "Y": 1805.5807901608769
      },
      {
        "Id": "185c4b4093984f82a30f3108b39e2b86",
        "Name": "Point 3.V",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -968.5122487431768,
        "Y": 2469.156547229292
      },
      {
        "Id": "ce04ea28426a4da3bf4260e3d9bf0f2e",
        "Name": "Point 3.U",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -962.5418587233439,
        "Y": 2322.588097765446
      },
      {
        "Id": "df07e5f3e4164ee393a5d96ee0b2d6dd",
        "Name": "Point 4.V",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -975.0488706617512,
        "Y": 2790.7663212360208
      },
      {
        "Id": "2f20e99c197347129c6ff0ddf3f6884a",
        "Name": "Point 4.U",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -975.0488706617521,
        "Y": 2626.6931232733687
      },
      {
        "Id": "caefb9322b8c41109223baad2dbe652f",
        "Name": "Point 5.V",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -975.5163633087918,
        "Y": 3148.785905787965
      },
      {
        "Id": "62d8d0455da244f8a26125c6eed5e62e",
        "Name": "Point 5.U",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -973.1813826155876,
        "Y": 2966.973640171748
      },
      {
        "Id": "fbb01117314a473db6b3defb3781c6af",
        "Name": "Point 6.U",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -970.847229436381,
        "Y": 3343.6705877273344
      },
      {
        "Id": "c132210d89b24108b27a9f10404fcba8",
        "Name": "Point 6.V",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -972.7147174825463,
        "Y": 3514.2737874965705
      },
      {
        "Id": "edb603efdc2c4f5a8c0291e1c9e1f231",
        "Name": "Point 7.U",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -975.0488706617521,
        "Y": 3688.6127908721337
      },
      {
        "Id": "7c9a2197fdc341c89f1c132ad39bf01b",
        "Name": "Point 7.V",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -981.5863200943263,
        "Y": 3858.2818328612884
      },
      {
        "Id": "34ee461215f540ca96d442011ad6e3db",
        "Name": "Solid.ByUnion",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 9644.492174516598,
        "Y": 1412.2867447143976
      },
      {
        "Id": "ee7ca10614c6473f8093c766286c350e",
        "Name": "DirectShape.ByGeometry",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 10748.839117847225,
        "Y": 1622.9635358789133
      },
      {
        "Id": "30061647606c4e6bbe3de5cf15227ae0",
        "Name": "Categories",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 10361.001611996891,
        "Y": 1804.0448377564146
      },
      {
        "Id": "29bba62e0e3a448bb105ab83a96d0b40",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 10416.038007398221,
        "Y": 2155.7715978508086
      },
      {
        "Id": "d4fa1285c34b4e348be263af2ed79a74",
        "Name": "Material.ByName",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 10392.18864968999,
        "Y": 1955.0815829563069
      },
      {
        "Id": "c19f57bfcb794921b95ad7ba83cd4568",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 10086.822460600773,
        "Y": 1870.9111507107946
      },
      {
        "Id": "863fcdadfe684b2db35b872b77e9a350",
        "Name": "Watch",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 834.1926415663811,
        "Y": 1871.2153133629488
      },
      {
        "Id": "043178b9d35b4fc4831444ed4e0c40d4",
        "Name": "Math.Random",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 810.3454535993478,
        "Y": 2376.008951030111
      },
      {
        "Id": "b491be9236494aec9632e7445c78d0d1",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 21.405813551627034,
        "Y": 2480.516063383221
      },
      {
        "Id": "f422711c90414cf5b71c1321c89d8238",
        "Name": "Watch",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1167.648559867066,
        "Y": 2131.494250528449
      },
      {
        "Id": "f57b0b56bbc24a8fb9b48b84ff73561a",
        "Name": "Watch 3D",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7521.720475712365,
        "Y": 1619.7540685050506
      },
      {
        "Id": "40bb8311da5b4a679c7e353133b6422a",
        "Name": "Curve.ExtrudeAsSolid",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 8162.396934242704,
        "Y": 1569.7460527595033
      },
      {
        "Id": "83ce94cbc50f4930ac50c3e8f92cd04e",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7925.525378477093,
        "Y": 1618.3616785446234
      },
      {
        "Id": "4f84f97b34724f449f972a5297ddf2e9",
        "Name": "Math.Round",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1396.4860000724775,
        "Y": 1967.634617060179
      },
      {
        "Id": "073487134f76459b8ac437f07481af2b",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1126.7188768044307,
        "Y": 1997.275672373441
      },
      {
        "Id": "a731ac3e3c2042ddb90524b60fb2c157",
        "Name": "List.Shuffle",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 498.35224274662005,
        "Y": 2466.8049741979303
      },
      {
        "Id": "a553739245684100811e4d2617c8f24d",
        "Name": "PolyCurve.ByJoinedCurves",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -33.96000055320792,
        "Y": 860.9452941629515
      },
      {
        "Id": "fb790802f3e44c6183df0b98b91f39fc",
        "Name": "Remember",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1360.7989064803392,
        "Y": 976.4833052978448
      },
      {
        "Id": "25e561593ae343d1866e27d8dbefc98f",
        "Name": "Gate",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 10103.90183175012,
        "Y": 1641.6651383023143
      },
      {
        "Id": "e534183219ed4dde8c56e5ba27f38c96",
        "Name": "PolyCurve.ByJoinedCurves",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7750.828671343462,
        "Y": 1326.8453961499283
      },
      {
        "Id": "5f18f43fb472465182ae0df3859d5389",
        "Name": "Site Boundary Lines",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -938.708365284557,
        "Y": 661.62842828939
      }
    ],
    "Annotations": [
      {
        "Id": "e963b49ce85b43cc9f46b1021c3e3629",
        "Title": "Geometry [Dynamo]:\r\nGenerate entire floors based on floorplates and combine them into a single solid",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "6d129bc876f440ca81c40a6c23155c6b",
          "32af6cba5eaf4fd9b7a39752cf4b1202",
          "e41ab09e3ecb4b9c911435779b2e7d49",
          "19dc5699b7b743deaf9324427405efb5",
          "89c7122e04cb4a6daa2f84b92122ef86",
          "139e9f9452474392b25df55f50511224",
          "34ee461215f540ca96d442011ad6e3db",
          "83ce94cbc50f4930ac50c3e8f92cd04e",
          "40bb8311da5b4a679c7e353133b6422a",
          "e534183219ed4dde8c56e5ba27f38c96"
        ],
        "HasNestedGroups": false,
        "Left": 7740.828671343462,
        "Top": 1170.4935788763817,
        "Width": 2109.6635031731357,
        "Height": 583.9529080526199,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 1286.4935788763817,
        "InitialHeight": 476.8680996682417,
        "TextblockHeight": 106.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "0a18521b2ba242f28a4d8a69cf961ea7",
        "Title": "Visualization:\r\nColourizes Dynamo geometry in \r\nthe Background preview window",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "969bbc0c91a6422592691641590d8bbd",
          "a0422580bbc34fa1943658f03d4c9045",
          "b037365316aa4e128df0433f5a617826"
        ],
        "HasNestedGroups": false,
        "Left": 9946.710106670585,
        "Top": 976.2606916004925,
        "Width": 861.1333968925392,
        "Height": 492.48094074527376,
        "FontSize": 30.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 1114.2606916004925,
        "InitialHeight": 337.48094074527376,
        "TextblockHeight": 128.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "592ce070b1f846d0a4038bad9b29dcea",
        "Title": "Geometry [Dynamo]:\r\nRandomize the primary floor plate based on the selected site boundaries",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "8eb018b47b904f28bf417e9043d6c5dd",
          "a6941d472c834a58a008ce5a9fda4c82",
          "b4677a52173f462d83eb776ac4fe9c7a",
          "6138fd4be1b6475ab0ac7578cdaeea5d",
          "828e4680e9274a578c222b9ca6231682",
          "f748a7770417451980e486114ca630ff",
          "ccfcf61d20cc404ea74012308d2c2f7e",
          "b1404f2dbc69418195318fe7c8bbe8eb",
          "df85817211f64e10bfa546e68ee31e57",
          "d97d616528d74362b8a056251fe11db4",
          "58421958e1dd4247928224759ec9180e",
          "8399e0ba79c54acc8f1baa85fdc88c97",
          "26db40c6297c413da03b5fbd81d36f52"
        ],
        "HasNestedGroups": false,
        "Left": 2787.132003345133,
        "Top": 731.5659249710902,
        "Width": 2466.2976697523836,
        "Height": 791.8021184238974,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 847.5659249710902,
        "InitialHeight": 628.8021184238974,
        "TextblockHeight": 106.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "6e67781131be47319f8709b3af1c2c66",
        "Title": "Geometry [Dynamo]:\r\nGenerate different floor plates based on the primary floor plate and place them at the correct hegiht",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "41a0f54d37fc440187aade0b8be46a1e",
          "d1df8d4cdd404822a7691ae92d3d585f",
          "984e6515fb8e407084a99a1d8bf947f6",
          "72c8d2bf8d4549d7ad79514f21d7d30a",
          "8706bf0adf934aac8c3516b1c024f3ab"
        ],
        "HasNestedGroups": false,
        "Left": 5744.884316785451,
        "Top": 610.7799451547223,
        "Width": 1339.5520741240289,
        "Height": 645.8151424893244,
        "FontSize": 30.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 748.7799451547223,
        "InitialHeight": 479.21437869063743,
        "TextblockHeight": 128.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "c5cbad15783747f58a2ba48ce600d688",
        "Title": "Math:\r\nCalculate public realm area, total building area and lift provision area",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "5bdb1fe4010c44bc8fc65d50b1242031",
          "5c314a99c1f24a25a8377dd498f64742",
          "583854ae9c344ed9b07408d4b37675af",
          "8a66850cce8b4e2889a4bf05778c15aa",
          "117e1b984d7d48a7ad508884794fffff",
          "dcfa2031846b4409bfed8423b35d3f39",
          "36bf416ede024fd8a996a51b2d13242c",
          "cc162b78079f47caba573472ec92b67d"
        ],
        "HasNestedGroups": false,
        "Left": 7650.94619940934,
        "Top": 342.7349272541763,
        "Width": 1175.2411679392007,
        "Height": 689.7225122771749,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 458.7349272541763,
        "InitialHeight": 544.7225122771749,
        "TextblockHeight": 106.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "a75accc30f0641259c421899d316fc73",
        "Title": "Geometry [Dynamo]:\r\nOffset the site boundary a certain distance towards the interior of the site\r\n",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "73d112b007344202816550da9a8b3b9e",
          "df551bf06fef49da9acd7e749ad62f99"
        ],
        "HasNestedGroups": false,
        "Left": 1709.1474390273106,
        "Top": 883.8179390904538,
        "Width": 666.8953114261676,
        "Height": 405.4658462605644,
        "FontSize": 30.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 1057.8179390904538,
        "InitialHeight": 226.46584626056438,
        "TextblockHeight": 164.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "b332795e1d194eefac0343b2b8ddec13",
        "Title": "Geometry [Revit/Dynamo]:\r\nConvert Revit site boundary into a Dynamo polycurve",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "b5fd0fa8f3fd4e5699a08e7fee3726ab",
          "722f1771e61a41f08a72df37b44c2876",
          "a553739245684100811e4d2617c8f24d"
        ],
        "HasNestedGroups": false,
        "Left": -560.5967706503006,
        "Top": 753.1017413985438,
        "Width": 807.6367700970927,
        "Height": 339.8435527644077,
        "FontSize": 30.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 855.1017413985438,
        "InitialHeight": 150.84355276440772,
        "TextblockHeight": 92.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "3222a1f52a2c4d92abc15c4f136da592",
        "Title": "Dynamo Inputs",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "5f18f43fb472465182ae0df3859d5389"
        ],
        "HasNestedGroups": false,
        "Left": -948.708365284557,
        "Top": 588.62842828939,
        "Width": 308.0,
        "Height": 241.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 661.62842828939,
        "InitialHeight": 145.0,
        "TextblockHeight": 63.0,
        "Background": "#FFFFB8D8"
      },
      {
        "Id": "91439fa0701541d2b189af5b32bd1b88",
        "Title": "Geometry [Dynamo/Revit]:\r\nConverts Dynamo geometry into a direct shape to be visualized inside Revit",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "ee7ca10614c6473f8093c766286c350e",
          "30061647606c4e6bbe3de5cf15227ae0",
          "29bba62e0e3a448bb105ab83a96d0b40",
          "d4fa1285c34b4e348be263af2ed79a74",
          "c19f57bfcb794921b95ad7ba83cd4568",
          "25e561593ae343d1866e27d8dbefc98f",
          "4ef6b77daafd4568aa82bd053571c6a2"
        ],
        "HasNestedGroups": false,
        "Left": 10076.822460600773,
        "Top": 1506.9635358789133,
        "Width": 1251.2442278265698,
        "Height": 792.8080619718953,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 1622.9635358789133,
        "InitialHeight": 677.8080619718953,
        "TextblockHeight": 106.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "09321db93a254f5cb0839b4afa6b5e81",
        "Title": "",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "2067b8d1c262418db1ec684feca6b100"
        ],
        "HasNestedGroups": false,
        "Left": -1348.5842035190226,
        "Top": 1215.5615894150858,
        "Width": 318.0,
        "Height": 157.0,
        "FontSize": 14.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 1265.5615894150858,
        "InitialHeight": 145.0,
        "TextblockHeight": 40.0,
        "Background": "#FFFFC999"
      },
      {
        "Id": "ca797c6a498e4e5db8c66aa02a47d783",
        "Title": "",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "7b0cce373fb84e50b4c90a061a4ea7e8"
        ],
        "HasNestedGroups": false,
        "Left": -1349.5089914390232,
        "Top": 1011.414871680541,
        "Width": 318.0,
        "Height": 171.0,
        "FontSize": 14.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 1061.414871680541,
        "InitialHeight": 145.0,
        "TextblockHeight": 40.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "5e26ab553d8c4489abd8f2caa6599573",
        "Title": "",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "2128cf7c408e4fdeb6eed423a4b771e8"
        ],
        "HasNestedGroups": false,
        "Left": -1352.2833551990252,
        "Top": 805.1232396368813,
        "Width": 318.0,
        "Height": 171.0,
        "FontSize": 14.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 855.1232396368813,
        "InitialHeight": 145.0,
        "TextblockHeight": 40.0,
        "Background": "#FFFFB8D8"
      },
      {
        "Id": "5ed45cf75e4f47ff908653447a0ea7a7",
        "Title": "Outputs:\r\nOutput information can be used to filter results in Refinery",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "8a62cf03c3254d9197d29e2c972d10a1",
          "05a07d68a540445b9648669bf233f1f6",
          "58911b2906f645d9a6b09c3933fa83c5",
          "9858574be7a34cfd94739ecf03a63950"
        ],
        "HasNestedGroups": false,
        "Left": 9082.364730042744,
        "Top": 258.20121450186565,
        "Width": 637.459491269361,
        "Height": 645.5324632365673,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 418.20121450186565,
        "InitialHeight": 482.53246323656725,
        "TextblockHeight": 150.0,
        "Background": "#FFFFC999"
      },
      {
        "Id": "235e85c97205479db63263669d77668e",
        "Title": "Remember Selected Lines",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "b4dad0b988764e88896c5adf24b01ccf",
          "fb790802f3e44c6183df0b98b91f39fc"
        ],
        "HasNestedGroups": false,
        "Left": 1022.5983834642575,
        "Top": 903.4833052978448,
        "Width": 501.20052301608166,
        "Height": 254.91487382644152,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 976.4833052978448,
        "InitialHeight": 182.91487382644152,
        "TextblockHeight": 63.0,
        "Background": "#FFBB87C6"
      },
      {
        "Id": "6f34008c1f9d460c8933565dce8cc0bc",
        "Title": "Generative Design Inputs",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "0255ecbf95bc4c77b9cb265a6ec274e5",
          "2b18989505564bd58244de17c878f678",
          "f9c101d2a75042ef83ac38f2d4b9d451",
          "79f401d622324ded938229060f712b23",
          "5931a0906cc24206a38f793d72c90145",
          "4000fd783f0149f7ae8852e3d9e4dacf",
          "8874529a6cf547eab944589363b8d0bb",
          "185c4b4093984f82a30f3108b39e2b86",
          "ce04ea28426a4da3bf4260e3d9bf0f2e",
          "df07e5f3e4164ee393a5d96ee0b2d6dd",
          "2f20e99c197347129c6ff0ddf3f6884a",
          "caefb9322b8c41109223baad2dbe652f",
          "62d8d0455da244f8a26125c6eed5e62e",
          "fbb01117314a473db6b3defb3781c6af",
          "c132210d89b24108b27a9f10404fcba8",
          "edb603efdc2c4f5a8c0291e1c9e1f231",
          "7c9a2197fdc341c89f1c132ad39bf01b",
          "c936ff1a28d94e3284500558d867fb1c"
        ],
        "HasNestedGroups": false,
        "Left": -991.5863200943263,
        "Top": 883.9069905984869,
        "Width": 397.6577121980072,
        "Height": 3106.3748422628014,
        "FontSize": 36.0,
        "GroupStyleId": "883066aa-1fe2-44a4-9bd1-c3df86bfe9f6",
        "InitialTop": 999.9069905984869,
        "InitialHeight": 3003.3748422628014,
        "TextblockHeight": 106.0,
        "Background": "#FFFFB8D8"
      },
      {
        "Id": "8706bf0adf934aac8c3516b1c024f3ab",
        "Title": "INPUTS\r\n________________________________________\r\nIN[0] = Random Floor Plate [Surface]\r\nIN[1] = Current Time [DateTime]\r\nIN[2] = Maximum Building Height [Double]\r\nIN[3] = Offset Site Boundary [Crvs]\r\n\r\nOUPUT\r\n________________________________________\r\nOUT[0] = Floor Plates [Surface]\r\nOUT[1] = Floor Heights [Double]\r\nOUT[2] = Number of Floors [Int]",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 5838.384316785451,
        "Top": 756.7799451547223,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "d1df8d4cdd404822a7691ae92d3d585f"
      },
      {
        "Id": "df551bf06fef49da9acd7e749ad62f99",
        "Title": "INPUTS\r\n________________________________________\r\nIN[0] = Site Boundary [Crvs]\r\nIN[1] = Offset Amount [Double]\r\n\r\nOUPUT\r\n________________________________________\r\nOUT = Site Boundary Offset [Crvs]",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 1719.1474390273106,
        "Top": 1147.2837853510182,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "8399e0ba79c54acc8f1baa85fdc88c97",
        "Title": "INPUTS\r\n________________________________________\r\nIN[0] = Points [Pts]\r\n\r\nOUPUT\r\n________________________________________\r\nOUT = Building Surface [Srf]",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 3900.25925668497,
        "Top": 855.5659249710902,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "b1404f2dbc69418195318fe7c8bbe8eb"
      },
      {
        "Id": "26db40c6297c413da03b5fbd81d36f52",
        "Title": "INPUTS\r\n________________________________________\r\nIN[0] = Site Surface [Srf]\r\nIN[1] = Points [Pts]\r\n\r\nOUPUT\r\n________________________________________\r\nOUT = Building Surface [Srf]",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 4923.429673097517,
        "Top": 892.242734544918,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "a6941d472c834a58a008ce5a9fda4c82"
      },
      {
        "Id": "2067b8d1c262418db1ec684feca6b100",
        "Title": "Checking / Outputs\r\n_______________________________________________________\r\n\r\nOrange indicates checking nodes to ensure the script has deployed correctly.",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -1338.5842035190226,
        "Top": 1273.5615894150858,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "7b0cce373fb84e50b4c90a061a4ea7e8",
        "Title": "Working / Functions\r\n_______________________________________________________\r\n\r\nGreen indicates the working of the script. No changes should be made in these groups unless advised.",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -1339.5089914390232,
        "Top": 1069.414871680541,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "10ce2f1220a74871a22a4cd1d5a0814d",
        "Title": "ADDITIONAL COMMENTS\r\n________________________________________________________\r\n\r\n1) Select the site boundary lines from your Revit file, on the Dynamo Input group\r\n2) Open Generative Design (Manage > Generative Design...)\r\n3) Create a New Study\r\n4) Under generation method select Randomize\r\n5) Under Inputs, uncheck and set a value for the inputs that will not change during run\r\n6) Under settings, select the number of solutions wanted\r\n7) Fix any possible problems in the issues section\r\n8) Click generate and wait for the outputs\r\n\r\n",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -1673.3684871258704,
        "Top": 801.8220143721716,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "2128cf7c408e4fdeb6eed423a4b771e8",
        "Title": "Variables / Inputs\r\n_______________________________________________________\r\n\r\nRed indicates Variables that can be altered per project and must be set accordingly before running the script.",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -1342.2833551990252,
        "Top": 863.1232396368813,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "9858574be7a34cfd94739ecf03a63950",
        "Title": "NOTE:\r\nIn order to see an \"Output\" in Generative Design, you have to right-click on a compatible node and check the \"is Output\" option. Rename the node to see a legible output name in Generative Design.",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 9421.824221312105,
        "Top": 426.20121450186565,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "c936ff1a28d94e3284500558d867fb1c",
        "Title": "NOTE:\r\nIn order to see an 'Input' in Generative Design, you have to right-click on a compatible node and check the 'Is Input' option. Rename the node to see a legible input name in Generative Design.",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -962.1643554200327,
        "Top": 1007.9069905984869,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "4ef6b77daafd4568aa82bd053571c6a2",
        "Title": "NOTE:\r\nUnfreeze this node to generate a direct shape of the selected building in the Revit enviroment.",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 11022.066688427343,
        "Top": 1654.5675581733572,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      }
    ],
    "X": 1586.4866114318538,
    "Y": -383.077178687691,
    "Zoom": 0.7673376116131638
  }
}